{
  "contractName": "GX_GovernanceTrader",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "adminAddress",
          "type": "address"
        }
      ],
      "name": "GX_AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "adminAddress",
          "type": "address"
        }
      ],
      "name": "GX_AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tarderAddress",
          "type": "address"
        }
      ],
      "name": "GX_TraderAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "traderAddress",
          "type": "address"
        }
      ],
      "name": "GX_TraderRemoved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressToCheck",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_adminToDelete",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newTrader",
          "type": "address"
        }
      ],
      "name": "addTrader",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_traderToDelete",
          "type": "address"
        }
      ],
      "name": "removeTrader",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressToCheck",
          "type": "address"
        }
      ],
      "name": "isTrader",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"}],\"name\":\"GX_AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"}],\"name\":\"GX_AdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tarderAddress\",\"type\":\"address\"}],\"name\":\"GX_TraderAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"traderAddress\",\"type\":\"address\"}],\"name\":\"GX_TraderRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTrader\",\"type\":\"address\"}],\"name\":\"addTrader\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressToCheck\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressToCheck\",\"type\":\"address\"}],\"name\":\"isTrader\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adminToDelete\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_traderToDelete\",\"type\":\"address\"}],\"name\":\"removeTrader\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solidity Services\",\"methods\":{\"addAdmin(address)\":{\"details\":\"...\",\"params\":{\"_newAdmin\":\"new admin of the contract\"}},\"addTrader(address)\":{\"details\":\"...\",\"params\":{\"_newTrader\":\"new trader of the contract\"}},\"constructor\":{\"details\":\"...\"},\"isAdmin(address)\":{\"details\":\"...\",\"params\":{\"_addressToCheck\":\"the address to be checked\"}},\"isTrader(address)\":{\"details\":\"...\",\"params\":{\"_addressToCheck\":\"the address to be checked\"}},\"removeAdmin(address)\":{\"details\":\"...\",\"params\":{\"_adminToDelete\":\"removing the admin from the contract\"}},\"removeTrader(address)\":{\"details\":\"...\",\"params\":{\"_traderToDelete\":\"removing the trader from the contract\"}}},\"title\":\"Galaxis: Governance implementation\"},\"userdoc\":{\"methods\":{\"addAdmin(address)\":{\"notice\":\"TRANSACTIONSadding a new admin to the contract\"},\"addTrader(address)\":{\"notice\":\"TRANSACTIONSadding a new trader to the contract\"},\"constructor\":\"CONSTRUCTORcreating a simple governance contract for traders\",\"isAdmin(address)\":{\"notice\":\"VIEWSchecking if the address is admin\"},\"isTrader(address)\":{\"notice\":\"VIEWSchecking if the address is a trader\"},\"removeAdmin(address)\":{\"notice\":\"removing an admin from the contract\"},\"removeTrader(address)\":{\"notice\":\"removing a trader from the contract\"}},\"notice\":\"Simple Governance investor ancestor class\"}},\"settings\":{\"compilationTarget\":{\"/home/dsz/git/galaxistest/galaxis/contracts/Governance/GX_GovernanceTrader.sol\":\"GX_GovernanceTrader\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/dsz/git/galaxistest/galaxis/contracts/Governance/GX_GovernanceAdmin.sol\":{\"keccak256\":\"0x366d9f22e06078cae2774e6a7a980195623956248862ab8be94c89591574a0da\",\"urls\":[\"bzz-raw://6771548bddcd894d9f3de922232c65e9f931fa74ec19d871e27920f5943dd57a\",\"dweb:/ipfs/QmcjkJRvPXAzGfWrByLjjwWqgYKTyhrNoZe8PK5ZwkMqGx\"]},\"/home/dsz/git/galaxistest/galaxis/contracts/Governance/GX_GovernanceTrader.sol\":{\"keccak256\":\"0x56305adefb37478d6dc75dec0b61765b35ffb1e60b0264f88e19a5f55f843dd1\",\"urls\":[\"bzz-raw://adccce0c75ec7b4bf6fdfadef556bc7fc2f78ef0ba78eb7183e9ae485846ac12\",\"dweb:/ipfs/QmXDEwf5kSNCiw8kRBB4nvmtsBDuHLL95GHk6yfmaE4okr\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000908152602081905260409020805460ff191660011790556104808061003a6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630a1f194f146100675780631785f53c1461008f57806324d7806c146100b55780634039ad0d146100ef5780635d428e0814610115578063704802751461013b575b600080fd5b61008d6004803603602081101561007d57600080fd5b50356001600160a01b0316610161565b005b61008d600480360360208110156100a557600080fd5b50356001600160a01b03166101fd565b6100db600480360360208110156100cb57600080fd5b50356001600160a01b0316610299565b604080519115158252519081900360200190f35b6100db6004803603602081101561010557600080fd5b50356001600160a01b03166102b7565b61008d6004803603602081101561012b57600080fd5b50356001600160a01b03166102d5565b61008d6004803603602081101561015157600080fd5b50356001600160a01b0316610377565b3360009081526020819052604090205460ff1615156001146101b45760405162461bcd60e51b81526004018080602001828103825260348152602001806104176034913960400191505060405180910390fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f125c1e69722a1f81cb8c84041dfcf0b7dcda809498ceb22b0a003a25719ff0a29190a250565b3360009081526020819052604090205460ff1615156001146102505760405162461bcd60e51b81526004018080602001828103825260348152602001806104176034913960400191505060405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff19169055517f6a35edfb19dff31b968882a3f9eeef54e0ca71bb9af2db6e085f409715d3c5479190a250565b6001600160a01b031660009081526020819052604090205460ff1690565b6001600160a01b031660009081526001602052604090205460ff1690565b3360009081526020819052604090205460ff1615156001146103285760405162461bcd60e51b81526004018080602001828103825260348152602001806104176034913960400191505060405180910390fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fa9bb5f0420fe64668db4e81d54bad8406be59942fe85b2e79bac99153cfcd4749190a250565b3360009081526020819052604090205460ff1615156001146103ca5760405162461bcd60e51b81526004018080602001828103825260348152602001806104176034913960400191505060405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff19166001179055517fd7f0afc2242fe9a5f45af6dea542902933e36c643299a53b1057b13cf8bcad809190a25056fe47616c617869733a204163636573732064656e6965643a206e6f7420616e2061646d696e206f662074686520636f6e7472616374a2646970667358221220fac79cf87298e7f2a42668139f05c2a5ee5ffbfc18269e56a10624539b84894c64736f6c63430006050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80630a1f194f146100675780631785f53c1461008f57806324d7806c146100b55780634039ad0d146100ef5780635d428e0814610115578063704802751461013b575b600080fd5b61008d6004803603602081101561007d57600080fd5b50356001600160a01b0316610161565b005b61008d600480360360208110156100a557600080fd5b50356001600160a01b03166101fd565b6100db600480360360208110156100cb57600080fd5b50356001600160a01b0316610299565b604080519115158252519081900360200190f35b6100db6004803603602081101561010557600080fd5b50356001600160a01b03166102b7565b61008d6004803603602081101561012b57600080fd5b50356001600160a01b03166102d5565b61008d6004803603602081101561015157600080fd5b50356001600160a01b0316610377565b3360009081526020819052604090205460ff1615156001146101b45760405162461bcd60e51b81526004018080602001828103825260348152602001806104176034913960400191505060405180910390fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f125c1e69722a1f81cb8c84041dfcf0b7dcda809498ceb22b0a003a25719ff0a29190a250565b3360009081526020819052604090205460ff1615156001146102505760405162461bcd60e51b81526004018080602001828103825260348152602001806104176034913960400191505060405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff19169055517f6a35edfb19dff31b968882a3f9eeef54e0ca71bb9af2db6e085f409715d3c5479190a250565b6001600160a01b031660009081526020819052604090205460ff1690565b6001600160a01b031660009081526001602052604090205460ff1690565b3360009081526020819052604090205460ff1615156001146103285760405162461bcd60e51b81526004018080602001828103825260348152602001806104176034913960400191505060405180910390fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fa9bb5f0420fe64668db4e81d54bad8406be59942fe85b2e79bac99153cfcd4749190a250565b3360009081526020819052604090205460ff1615156001146103ca5760405162461bcd60e51b81526004018080602001828103825260348152602001806104176034913960400191505060405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff19166001179055517fd7f0afc2242fe9a5f45af6dea542902933e36c643299a53b1057b13cf8bcad809190a25056fe47616c617869733a204163636573732064656e6965643a206e6f7420616e2061646d696e206f662074686520636f6e7472616374a2646970667358221220fac79cf87298e7f2a42668139f05c2a5ee5ffbfc18269e56a10624539b84894c64736f6c63430006050033",
  "immutableReferences": {},
  "sourceMap": "191:1554:25:-:0;;;660:28;5:9:-1;2:2;;;27:1;24;17:12;2:2;-1:-1;653:10:23;646:6;:18;;;;;;;;;;:25;;-1:-1:-1;;646:25:23;667:4;646:25;;;191:1554:25;;;;;;",
  "deployedSourceMap": "191:1554:25:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;191:1554:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1316:161:25;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1316:161:25;-1:-1:-1;;;;;1316:161:25;;:::i;:::-;;1304:155:23;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1304:155:23;-1:-1:-1;;;;;1304:155:23;;:::i;1603:116::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1603:116:23;-1:-1:-1;;;;;1603:116:23;;:::i;:::-;;;;;;;;;;;;;;;;;;1624:118:25;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1624:118:25;-1:-1:-1;;;;;1624:118:25;;:::i;1032:140::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1032:140:25;-1:-1:-1;;;;;1032:140:25;;:::i;1028:134:23:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1028:134:23;-1:-1:-1;;;;;1028:134:23;;:::i;1316:161:25:-;787:10:23;780:6;:18;;;;;;;;;;;;;:26;;:18;:26;772:91;;;;-1:-1:-1;;;772:91:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1390:24:25;::::1;1417:5;1390:24:::0;;;:7:::1;:24;::::0;;;;;:32;;-1:-1:-1;;1390:32:25::1;::::0;;1437:33;::::1;::::0;1417:5;1437:33:::1;1316:161:::0;:::o;1304:155:23:-;787:10;780:6;:18;;;;;;;;;;;;;:26;;:18;:26;772:91;;;;-1:-1:-1;;;772:91:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1376:22:23;::::1;1401:5;1376:22:::0;;;::::1;::::0;;;;;;;:30;;-1:-1:-1;;1376:30:23::1;::::0;;1421:31;::::1;::::0;1401:5;1421:31:::1;1304:155:::0;:::o;1603:116::-;-1:-1:-1;;;;;1689:23:23;1666:4;1689:23;;;;;;;;;;;;;;1603:116::o;1624:118:25:-;-1:-1:-1;;;;;1711:24:25;1688:4;1711:24;;;:7;:24;;;;;;;;;1624:118::o;1032:140::-;787:10:23;780:6;:18;;;;;;;;;;;;;:26;;:18;:26;772:91;;;;-1:-1:-1;;;772:91:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1098:19:25;::::1;;::::0;;;1120:4:::1;1098:19;::::0;;;;;;;:26;;-1:-1:-1;;1098:26:25::1;::::0;;::::1;::::0;;;1139;::::1;::::0;1098:19;1139:26:::1;1032:140:::0;:::o;1028:134:23:-;787:10;780:6;:18;;;;;;;;;;;;;:26;;:18;:26;772:91;;;;-1:-1:-1;;;772:91:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1092:17:23;::::1;:6;:17:::0;;;::::1;::::0;;;;;;;:24;;-1:-1:-1;;1092:24:23::1;1112:4;1092:24;::::0;;1131;::::1;::::0;1092:6;1131:24:::1;1028:134:::0;:::o",
  "source": "pragma solidity ^0.6.0;\n\nimport './GX_GovernanceAdmin.sol';\n\n/// @author Solidity Services\n/// @title Galaxis: Governance implementation\n/// @notice Simple Governance investor ancestor class\ncontract GX_GovernanceTrader is GX_GovernanceAdmin {\n\n    /// @notice traders\n    mapping (address => bool) traders;\n\n    /// EVENTS: user facing events\n    /// @notice event for adding a trader\n    event GX_TraderAdded(address indexed tarderAddress);\n    /// @notice event for removing a trader\n    event GX_TraderRemoved(address indexed traderAddress);\n\n\n    /// CONSTRUCTOR\n    \n    /// @notice creating a simple governance contract for traders\n    /// @dev ...\n    constructor() public {\n    }\n\n    /// MODIFIERS\n    /// @notice only Trader\n    modifier onlyTrader() {\n        require(traders[msg.sender] == true, \"Galaxis: Access denied: not a trader of the contract\");\n        _;\n    }\n\n    /// TRANSACTIONS\n\n    /// @notice adding a new trader to the contract\n    /// @dev ...\n    /// @param _newTrader new trader of the contract\n    function addTrader(address _newTrader) public onlyAdmin {\n        traders[_newTrader] = true;\n        emit GX_TraderAdded(_newTrader);\n    }\n\n    /// @notice removing a trader from the contract\n    /// @dev ...\n    /// @param _traderToDelete removing the trader from the contract\n    function removeTrader(address _traderToDelete) public onlyAdmin {\n        traders[_traderToDelete] = false;\n        emit GX_TraderRemoved(_traderToDelete);\n    }\n\n    /// VIEWS\n\n    /// @notice checking if the address is a trader\n    /// @dev ...\n    /// @param _addressToCheck the address to be checked\n    function isTrader(address _addressToCheck) public view returns (bool) {\n        return traders[_addressToCheck];\n    }\n\n}",
  "sourcePath": "/home/dsz/git/galaxistest/galaxis/contracts/Governance/GX_GovernanceTrader.sol",
  "ast": {
    "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/Governance/GX_GovernanceTrader.sol",
    "exportedSymbols": {
      "GX_GovernanceTrader": [
        2748
      ]
    },
    "id": 2749,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2658,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:25"
      },
      {
        "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/Governance/GX_GovernanceAdmin.sol",
        "file": "./GX_GovernanceAdmin.sol",
        "id": 2659,
        "nodeType": "ImportDirective",
        "scope": 2749,
        "sourceUnit": 2565,
        "src": "25:34:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2661,
              "name": "GX_GovernanceAdmin",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2564,
              "src": "223:18:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GX_GovernanceAdmin_$2564",
                "typeString": "contract GX_GovernanceAdmin"
              }
            },
            "id": 2662,
            "nodeType": "InheritanceSpecifier",
            "src": "223:18:25"
          }
        ],
        "contractDependencies": [
          2564
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2660,
          "nodeType": "StructuredDocumentation",
          "src": "61:130:25",
          "text": "@author Solidity Services\n @title Galaxis: Governance implementation\n @notice Simple Governance investor ancestor class"
        },
        "fullyImplemented": true,
        "id": 2748,
        "linearizedBaseContracts": [
          2748,
          2564
        ],
        "name": "GX_GovernanceTrader",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2666,
            "name": "traders",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2748,
            "src": "273:33:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2665,
              "keyType": {
                "id": 2663,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "282:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "273:25:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2664,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "293:4:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2667,
              "nodeType": "StructuredDocumentation",
              "src": "313:72:25",
              "text": "EVENTS: user facing events\n @notice event for adding a trader"
            },
            "id": 2671,
            "name": "GX_TraderAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2669,
                  "indexed": true,
                  "name": "tarderAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2671,
                  "src": "411:29:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "410:31:25"
            },
            "src": "390:52:25"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2672,
              "nodeType": "StructuredDocumentation",
              "src": "447:39:25",
              "text": "@notice event for removing a trader"
            },
            "id": 2676,
            "name": "GX_TraderRemoved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2674,
                  "indexed": true,
                  "name": "traderAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2676,
                  "src": "514:29:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "514:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "513:31:25"
            },
            "src": "491:54:25"
          },
          {
            "body": {
              "id": 2680,
              "nodeType": "Block",
              "src": "681:7:25",
              "statements": []
            },
            "documentation": {
              "id": 2677,
              "nodeType": "StructuredDocumentation",
              "src": "552:103:25",
              "text": "CONSTRUCTOR\n @notice creating a simple governance contract for traders\n @dev ..."
            },
            "id": 2681,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:2:25"
            },
            "returnParameters": {
              "id": 2679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:0:25"
            },
            "scope": 2748,
            "src": "660:28:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2695,
              "nodeType": "Block",
              "src": "762:120:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2685,
                            "name": "traders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2666,
                            "src": "780:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2688,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2686,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "788:3:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "788:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "780:19:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 2689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "803:4:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "780:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "47616c617869733a204163636573732064656e6965643a206e6f74206120747261646572206f662074686520636f6e7472616374",
                        "id": 2691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "809:54:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2da84b57444a190b952a1e8b14e185d857b25d49d95ffccb2154eee4cbb39700",
                          "typeString": "literal_string \"Galaxis: Access denied: not a trader of the contract\""
                        },
                        "value": "Galaxis: Access denied: not a trader of the contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2da84b57444a190b952a1e8b14e185d857b25d49d95ffccb2154eee4cbb39700",
                          "typeString": "literal_string \"Galaxis: Access denied: not a trader of the contract\""
                        }
                      ],
                      "id": 2684,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "772:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "772:92:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2693,
                  "nodeType": "ExpressionStatement",
                  "src": "772:92:25"
                },
                {
                  "id": 2694,
                  "nodeType": "PlaceholderStatement",
                  "src": "874:1:25"
                }
              ]
            },
            "documentation": {
              "id": 2682,
              "nodeType": "StructuredDocumentation",
              "src": "694:41:25",
              "text": "MODIFIERS\n @notice only Trader"
            },
            "id": 2696,
            "name": "onlyTrader",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 2683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "759:2:25"
            },
            "src": "740:142:25",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2714,
              "nodeType": "Block",
              "src": "1088:84:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2704,
                        "name": "traders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2666,
                        "src": "1098:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2706,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2705,
                        "name": "_newTrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2699,
                        "src": "1106:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1098:19:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1120:4:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1098:26:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2709,
                  "nodeType": "ExpressionStatement",
                  "src": "1098:26:25"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2711,
                        "name": "_newTrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2699,
                        "src": "1154:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2710,
                      "name": "GX_TraderAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2671,
                      "src": "1139:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1139:26:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2713,
                  "nodeType": "EmitStatement",
                  "src": "1134:31:25"
                }
              ]
            },
            "documentation": {
              "id": 2697,
              "nodeType": "StructuredDocumentation",
              "src": "888:139:25",
              "text": "TRANSACTIONS\n @notice adding a new trader to the contract\n @dev ...\n @param _newTrader new trader of the contract"
            },
            "functionSelector": "5d428e08",
            "id": 2715,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2702,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2701,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2512,
                  "src": "1078:9:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1078:9:25"
              }
            ],
            "name": "addTrader",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2699,
                  "name": "_newTrader",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2715,
                  "src": "1051:18:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1051:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1050:20:25"
            },
            "returnParameters": {
              "id": 2703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1088:0:25"
            },
            "scope": 2748,
            "src": "1032:140:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2733,
              "nodeType": "Block",
              "src": "1380:97:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2723,
                        "name": "traders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2666,
                        "src": "1390:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2725,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2724,
                        "name": "_traderToDelete",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2718,
                        "src": "1398:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1390:24:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 2726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1417:5:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1390:32:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2728,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:32:25"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2730,
                        "name": "_traderToDelete",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2718,
                        "src": "1454:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2729,
                      "name": "GX_TraderRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2676,
                      "src": "1437:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:33:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2732,
                  "nodeType": "EmitStatement",
                  "src": "1432:38:25"
                }
              ]
            },
            "documentation": {
              "id": 2716,
              "nodeType": "StructuredDocumentation",
              "src": "1178:133:25",
              "text": "@notice removing a trader from the contract\n @dev ...\n @param _traderToDelete removing the trader from the contract"
            },
            "functionSelector": "0a1f194f",
            "id": 2734,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2721,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2720,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2512,
                  "src": "1370:9:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1370:9:25"
              }
            ],
            "name": "removeTrader",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2718,
                  "name": "_traderToDelete",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2734,
                  "src": "1338:23:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1337:25:25"
            },
            "returnParameters": {
              "id": 2722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1380:0:25"
            },
            "scope": 2748,
            "src": "1316:161:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2746,
              "nodeType": "Block",
              "src": "1694:48:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2742,
                      "name": "traders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2666,
                      "src": "1711:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 2744,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2743,
                      "name": "_addressToCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2737,
                      "src": "1719:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1711:24:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2741,
                  "id": 2745,
                  "nodeType": "Return",
                  "src": "1704:31:25"
                }
              ]
            },
            "documentation": {
              "id": 2735,
              "nodeType": "StructuredDocumentation",
              "src": "1483:136:25",
              "text": "VIEWS\n @notice checking if the address is a trader\n @dev ...\n @param _addressToCheck the address to be checked"
            },
            "functionSelector": "4039ad0d",
            "id": 2747,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTrader",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2737,
                  "name": "_addressToCheck",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2747,
                  "src": "1642:23:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1641:25:25"
            },
            "returnParameters": {
              "id": 2741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2740,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2747,
                  "src": "1688:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2739,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1688:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1687:6:25"
            },
            "scope": 2748,
            "src": "1624:118:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2749,
        "src": "191:1554:25"
      }
    ],
    "src": "0:1745:25"
  },
  "legacyAST": {
    "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/Governance/GX_GovernanceTrader.sol",
    "exportedSymbols": {
      "GX_GovernanceTrader": [
        2748
      ]
    },
    "id": 2749,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2658,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:25"
      },
      {
        "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/Governance/GX_GovernanceAdmin.sol",
        "file": "./GX_GovernanceAdmin.sol",
        "id": 2659,
        "nodeType": "ImportDirective",
        "scope": 2749,
        "sourceUnit": 2565,
        "src": "25:34:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2661,
              "name": "GX_GovernanceAdmin",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2564,
              "src": "223:18:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GX_GovernanceAdmin_$2564",
                "typeString": "contract GX_GovernanceAdmin"
              }
            },
            "id": 2662,
            "nodeType": "InheritanceSpecifier",
            "src": "223:18:25"
          }
        ],
        "contractDependencies": [
          2564
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2660,
          "nodeType": "StructuredDocumentation",
          "src": "61:130:25",
          "text": "@author Solidity Services\n @title Galaxis: Governance implementation\n @notice Simple Governance investor ancestor class"
        },
        "fullyImplemented": true,
        "id": 2748,
        "linearizedBaseContracts": [
          2748,
          2564
        ],
        "name": "GX_GovernanceTrader",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2666,
            "name": "traders",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2748,
            "src": "273:33:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2665,
              "keyType": {
                "id": 2663,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "282:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "273:25:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2664,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "293:4:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2667,
              "nodeType": "StructuredDocumentation",
              "src": "313:72:25",
              "text": "EVENTS: user facing events\n @notice event for adding a trader"
            },
            "id": 2671,
            "name": "GX_TraderAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2669,
                  "indexed": true,
                  "name": "tarderAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2671,
                  "src": "411:29:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "410:31:25"
            },
            "src": "390:52:25"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2672,
              "nodeType": "StructuredDocumentation",
              "src": "447:39:25",
              "text": "@notice event for removing a trader"
            },
            "id": 2676,
            "name": "GX_TraderRemoved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2674,
                  "indexed": true,
                  "name": "traderAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2676,
                  "src": "514:29:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "514:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "513:31:25"
            },
            "src": "491:54:25"
          },
          {
            "body": {
              "id": 2680,
              "nodeType": "Block",
              "src": "681:7:25",
              "statements": []
            },
            "documentation": {
              "id": 2677,
              "nodeType": "StructuredDocumentation",
              "src": "552:103:25",
              "text": "CONSTRUCTOR\n @notice creating a simple governance contract for traders\n @dev ..."
            },
            "id": 2681,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:2:25"
            },
            "returnParameters": {
              "id": 2679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:0:25"
            },
            "scope": 2748,
            "src": "660:28:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2695,
              "nodeType": "Block",
              "src": "762:120:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2685,
                            "name": "traders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2666,
                            "src": "780:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2688,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2686,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "788:3:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "788:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "780:19:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 2689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "803:4:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "780:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "47616c617869733a204163636573732064656e6965643a206e6f74206120747261646572206f662074686520636f6e7472616374",
                        "id": 2691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "809:54:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2da84b57444a190b952a1e8b14e185d857b25d49d95ffccb2154eee4cbb39700",
                          "typeString": "literal_string \"Galaxis: Access denied: not a trader of the contract\""
                        },
                        "value": "Galaxis: Access denied: not a trader of the contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2da84b57444a190b952a1e8b14e185d857b25d49d95ffccb2154eee4cbb39700",
                          "typeString": "literal_string \"Galaxis: Access denied: not a trader of the contract\""
                        }
                      ],
                      "id": 2684,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "772:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "772:92:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2693,
                  "nodeType": "ExpressionStatement",
                  "src": "772:92:25"
                },
                {
                  "id": 2694,
                  "nodeType": "PlaceholderStatement",
                  "src": "874:1:25"
                }
              ]
            },
            "documentation": {
              "id": 2682,
              "nodeType": "StructuredDocumentation",
              "src": "694:41:25",
              "text": "MODIFIERS\n @notice only Trader"
            },
            "id": 2696,
            "name": "onlyTrader",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 2683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "759:2:25"
            },
            "src": "740:142:25",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2714,
              "nodeType": "Block",
              "src": "1088:84:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2704,
                        "name": "traders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2666,
                        "src": "1098:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2706,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2705,
                        "name": "_newTrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2699,
                        "src": "1106:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1098:19:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1120:4:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1098:26:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2709,
                  "nodeType": "ExpressionStatement",
                  "src": "1098:26:25"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2711,
                        "name": "_newTrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2699,
                        "src": "1154:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2710,
                      "name": "GX_TraderAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2671,
                      "src": "1139:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1139:26:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2713,
                  "nodeType": "EmitStatement",
                  "src": "1134:31:25"
                }
              ]
            },
            "documentation": {
              "id": 2697,
              "nodeType": "StructuredDocumentation",
              "src": "888:139:25",
              "text": "TRANSACTIONS\n @notice adding a new trader to the contract\n @dev ...\n @param _newTrader new trader of the contract"
            },
            "functionSelector": "5d428e08",
            "id": 2715,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2702,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2701,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2512,
                  "src": "1078:9:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1078:9:25"
              }
            ],
            "name": "addTrader",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2699,
                  "name": "_newTrader",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2715,
                  "src": "1051:18:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1051:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1050:20:25"
            },
            "returnParameters": {
              "id": 2703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1088:0:25"
            },
            "scope": 2748,
            "src": "1032:140:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2733,
              "nodeType": "Block",
              "src": "1380:97:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2723,
                        "name": "traders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2666,
                        "src": "1390:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2725,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2724,
                        "name": "_traderToDelete",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2718,
                        "src": "1398:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1390:24:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 2726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1417:5:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1390:32:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2728,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:32:25"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2730,
                        "name": "_traderToDelete",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2718,
                        "src": "1454:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2729,
                      "name": "GX_TraderRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2676,
                      "src": "1437:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:33:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2732,
                  "nodeType": "EmitStatement",
                  "src": "1432:38:25"
                }
              ]
            },
            "documentation": {
              "id": 2716,
              "nodeType": "StructuredDocumentation",
              "src": "1178:133:25",
              "text": "@notice removing a trader from the contract\n @dev ...\n @param _traderToDelete removing the trader from the contract"
            },
            "functionSelector": "0a1f194f",
            "id": 2734,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2721,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2720,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2512,
                  "src": "1370:9:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1370:9:25"
              }
            ],
            "name": "removeTrader",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2718,
                  "name": "_traderToDelete",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2734,
                  "src": "1338:23:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1337:25:25"
            },
            "returnParameters": {
              "id": 2722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1380:0:25"
            },
            "scope": 2748,
            "src": "1316:161:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2746,
              "nodeType": "Block",
              "src": "1694:48:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2742,
                      "name": "traders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2666,
                      "src": "1711:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 2744,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2743,
                      "name": "_addressToCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2737,
                      "src": "1719:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1711:24:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2741,
                  "id": 2745,
                  "nodeType": "Return",
                  "src": "1704:31:25"
                }
              ]
            },
            "documentation": {
              "id": 2735,
              "nodeType": "StructuredDocumentation",
              "src": "1483:136:25",
              "text": "VIEWS\n @notice checking if the address is a trader\n @dev ...\n @param _addressToCheck the address to be checked"
            },
            "functionSelector": "4039ad0d",
            "id": 2747,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTrader",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2737,
                  "name": "_addressToCheck",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2747,
                  "src": "1642:23:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1641:25:25"
            },
            "returnParameters": {
              "id": 2741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2740,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2747,
                  "src": "1688:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2739,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1688:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1687:6:25"
            },
            "scope": 2748,
            "src": "1624:118:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2749,
        "src": "191:1554:25"
      }
    ],
    "src": "0:1745:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.5+commit.f956cc89.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.2-next.0",
  "updatedAt": "2020-08-13T15:10:44.452Z",
  "devdoc": {
    "author": "Solidity Services",
    "methods": {
      "addAdmin(address)": {
        "details": "...",
        "params": {
          "_newAdmin": "new admin of the contract"
        }
      },
      "addTrader(address)": {
        "details": "...",
        "params": {
          "_newTrader": "new trader of the contract"
        }
      },
      "constructor": {
        "details": "..."
      },
      "isAdmin(address)": {
        "details": "...",
        "params": {
          "_addressToCheck": "the address to be checked"
        }
      },
      "isTrader(address)": {
        "details": "...",
        "params": {
          "_addressToCheck": "the address to be checked"
        }
      },
      "removeAdmin(address)": {
        "details": "...",
        "params": {
          "_adminToDelete": "removing the admin from the contract"
        }
      },
      "removeTrader(address)": {
        "details": "...",
        "params": {
          "_traderToDelete": "removing the trader from the contract"
        }
      }
    },
    "title": "Galaxis: Governance implementation"
  },
  "userdoc": {
    "methods": {
      "addAdmin(address)": {
        "notice": "TRANSACTIONSadding a new admin to the contract"
      },
      "addTrader(address)": {
        "notice": "TRANSACTIONSadding a new trader to the contract"
      },
      "constructor": "CONSTRUCTORcreating a simple governance contract for traders",
      "isAdmin(address)": {
        "notice": "VIEWSchecking if the address is admin"
      },
      "isTrader(address)": {
        "notice": "VIEWSchecking if the address is a trader"
      },
      "removeAdmin(address)": {
        "notice": "removing an admin from the contract"
      },
      "removeTrader(address)": {
        "notice": "removing a trader from the contract"
      }
    },
    "notice": "Simple Governance investor ancestor class"
  }
}