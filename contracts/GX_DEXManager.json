{
  "contractName": "GX_DEXManager",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "adminAddress",
          "type": "address"
        }
      ],
      "name": "GX_AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "adminAddress",
          "type": "address"
        }
      ],
      "name": "GX_AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "num",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "enum GX_DEXRegistry.DEXType",
          "name": "dexType",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dexAddress",
          "type": "address"
        }
      ],
      "name": "GX_DEXAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "num",
          "type": "uint8"
        }
      ],
      "name": "GX_DEXRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "partyAddress",
          "type": "address"
        }
      ],
      "name": "GX_PartyAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "partyAddress",
          "type": "address"
        }
      ],
      "name": "GX_PartyRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_dex",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_tknOffer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_tknGet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        }
      ],
      "name": "OrderPlaced",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_num",
          "type": "uint8"
        },
        {
          "internalType": "enum GX_DEXRegistry.DEXType",
          "name": "_dexType",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_dexAddress",
          "type": "address"
        }
      ],
      "name": "addDEX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newParty",
          "type": "address"
        }
      ],
      "name": "addParty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "daiAmount",
          "type": "uint256"
        }
      ],
      "name": "convertEthToDai",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_nrToCheck",
          "type": "uint8"
        }
      ],
      "name": "getDEXInfo",
      "outputs": [
        {
          "internalType": "enum GX_DEXRegistry.DEXType",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenToSell",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToSell",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenToBuy",
          "type": "address"
        }
      ],
      "name": "getRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressToCheck",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressToCheck",
          "type": "address"
        }
      ],
      "name": "isParty",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenToSell",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToSell",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenToBuy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "dexAddress",
          "type": "address"
        }
      ],
      "name": "makeOrderKyber",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_adminToDelete",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_num",
          "type": "uint8"
        }
      ],
      "name": "removeDEX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_partyToDelete",
          "type": "address"
        }
      ],
      "name": "removeParty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenToSell",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToSell",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenToBuy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dexAddress",
          "type": "address"
        }
      ],
      "name": "takeOrderKyber",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "uniswapRouter",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_dex",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_tknOffer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tknGet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        }
      ],
      "name": "placeOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_orderId",
          "type": "uint256"
        }
      ],
      "name": "cancelOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_dex",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_tknOffer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tknGet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getChangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"}],\"name\":\"GX_AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"}],\"name\":\"GX_AdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"num\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum GX_DEXRegistry.DEXType\",\"name\":\"dexType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dexAddress\",\"type\":\"address\"}],\"name\":\"GX_DEXAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"num\",\"type\":\"uint8\"}],\"name\":\"GX_DEXRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"partyAddress\",\"type\":\"address\"}],\"name\":\"GX_PartyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"partyAddress\",\"type\":\"address\"}],\"name\":\"GX_PartyRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_dex\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_tknOffer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_tknGet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"OrderPlaced\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_num\",\"type\":\"uint8\"},{\"internalType\":\"enum GX_DEXRegistry.DEXType\",\"name\":\"_dexType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_dexAddress\",\"type\":\"address\"}],\"name\":\"addDEX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newParty\",\"type\":\"address\"}],\"name\":\"addParty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_orderId\",\"type\":\"uint256\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"daiAmount\",\"type\":\"uint256\"}],\"name\":\"convertEthToDai\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_dex\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_tknOffer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tknGet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getChangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_nrToCheck\",\"type\":\"uint8\"}],\"name\":\"getDEXInfo\",\"outputs\":[{\"internalType\":\"enum GX_DEXRegistry.DEXType\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenToSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToSell\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenToBuy\",\"type\":\"address\"}],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressToCheck\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressToCheck\",\"type\":\"address\"}],\"name\":\"isParty\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenToSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToSell\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenToBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dexAddress\",\"type\":\"address\"}],\"name\":\"makeOrderKyber\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_dex\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_tknOffer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tknGet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"placeOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adminToDelete\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_num\",\"type\":\"uint8\"}],\"name\":\"removeDEX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_partyToDelete\",\"type\":\"address\"}],\"name\":\"removeParty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenToSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToSell\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenToBuy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dexAddress\",\"type\":\"address\"}],\"name\":\"takeOrderKyber\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solidity Services\",\"methods\":{\"addAdmin(address)\":{\"details\":\"...\",\"params\":{\"_newAdmin\":\"new admin of the contract\"}},\"addDEX(uint8,uint8,address)\":{\"details\":\"...\",\"params\":{\"_dexAddress\":\"address of the dex or dex adapter\",\"_dexType\":\"typer of the dex\",\"_num\":\"name and number of the exchange\"}},\"addParty(address)\":{\"details\":\"...\",\"params\":{\"_newParty\":\"new party of the contract\"}},\"cancelOrder(uint256)\":{\"details\":\"...\",\"params\":{\"_orderId\":\"cancelling the order id\"}},\"getChangeRate(uint8,address,address,uint256)\":{\"details\":\"...\",\"params\":{\"_amount\":\"amount to echange\",\"_dex\":\"dex number\",\"_tknGet\":\"token to get\",\"_tknOffer\":\"token to offer\"}},\"getDEXInfo(uint8)\":{\"details\":\"...\",\"params\":{\"_nrToCheck\":\"nr to check\"}},\"isAdmin(address)\":{\"details\":\"...\",\"params\":{\"_addressToCheck\":\"the address to be checked\"}},\"isParty(address)\":{\"details\":\"...\",\"params\":{\"_addressToCheck\":\"the address to be checked\"}},\"placeOrder(uint8,address,address,uint256,uint256)\":{\"details\":\"...\",\"params\":{\"_amount\":\"amount to exchange\",\"_dex\":\"dex exchange or adapter number\",\"_rate\":\"expected rate of the exchange\",\"_tknGet\":\"token to get\",\"_tknOffer\":\"token to offer\"}},\"removeAdmin(address)\":{\"details\":\"...\",\"params\":{\"_adminToDelete\":\"removing the admin from the contract\"}},\"removeDEX(uint8)\":{\"details\":\"...\",\"params\":{\"_num\":\"name and number of the exchange\"}},\"removeParty(address)\":{\"details\":\"...\",\"params\":{\"_partyToDelete\":\"removing the party from the contract\"}}},\"title\":\"Galaxis: DEX manager\"},\"userdoc\":{\"methods\":{\"addAdmin(address)\":{\"notice\":\"TRANSACTIONSadding a new admin to the contract\"},\"addDEX(uint8,uint8,address)\":{\"notice\":\"TRANSACTIONSadding exchange to the known exchanges\"},\"addParty(address)\":{\"notice\":\"TRANSACTIONSadding a new party\"},\"cancelOrder(uint256)\":{\"notice\":\"placing order to an exchange\"},\"constructor\":\"STATE VARIABLES CONSTRUCTOR\",\"getChangeRate(uint8,address,address,uint256)\":{\"notice\":\"getting change rate for a given token change on an exchange\"},\"getDEXInfo(uint8)\":{\"notice\":\"VIEWSchecking the address of the exchange\"},\"isAdmin(address)\":{\"notice\":\"VIEWSchecking if the address is admin\"},\"isParty(address)\":{\"notice\":\"VIEWSchecking if the address is a trusted party\"},\"placeOrder(uint8,address,address,uint256,uint256)\":{\"notice\":\"MODIFIERS TRANSACTIONSplacing order to an exchange\"},\"removeAdmin(address)\":{\"notice\":\"removing an admin from the contract\"},\"removeDEX(uint8)\":{\"notice\":\"removing exchange or exchange adapter from the known exchanges\"},\"removeParty(address)\":{\"notice\":\"removing a party from the contract\"}},\"notice\":\"Services for the decentralized exchanges\"}},\"settings\":{\"compilationTarget\":{\"/home/dsz/git/galaxistest/galaxis/contracts/DEXManager/GX_DEXManager.sol\":\"GX_DEXManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/dsz/git/galaxistest/galaxis/contracts/Composition/GX_DEXRegistry.sol\":{\"keccak256\":\"0x7ad37d1ca4c7f346092ac0b5e4554b8b91104d2e125ac982ea9ab246d63b5cd1\",\"urls\":[\"bzz-raw://75750cd3b19fcba5f3a2b86f4b532eb68e330cf85b1a0f5953f185e4c1a75dda\",\"dweb:/ipfs/QmPAXYDYUSki19DwSLPiMesf2iycFEGKwaBQSgMdUoMkSi\"]},\"/home/dsz/git/galaxistest/galaxis/contracts/Composition/GX_TrustedParties.sol\":{\"keccak256\":\"0x614a7d5b136e8453904d98866b2c875fa1251bffaa1945173dfe3af2d50c9d8b\",\"urls\":[\"bzz-raw://c7cfa0144e113a1857646820f98f71d1470fd6f4839e51fb7728d76f7c20638e\",\"dweb:/ipfs/QmeTyCiMYci3142CtZMVKVCbaZB38EZ3qV3w7gmW4WaNfH\"]},\"/home/dsz/git/galaxistest/galaxis/contracts/DEXManager/GX_DEXManager.sol\":{\"keccak256\":\"0x54de261ad0196ae28a4aad9e1c3fe355178aad68725ddd94913622f5292857eb\",\"urls\":[\"bzz-raw://a803db548886a406f762ab868953f14fd01c19cf1c39dda45f6d45e6dd497deb\",\"dweb:/ipfs/QmdrsZErxZvrgjNSW93AY25BLxWhkRsMNMNALC4wM4Rp4q\"]},\"/home/dsz/git/galaxistest/galaxis/contracts/DEXManager/GX_DEXManagerBase.sol\":{\"keccak256\":\"0x9323da2f6e9dea9a79c4416a70fdc548462844b104acf522609059a6b8f033e6\",\"urls\":[\"bzz-raw://d9c3f51737338497b4c50e331680d812675f72723a5b5851d51fbbfb2aa81bc0\",\"dweb:/ipfs/QmTvaDKsz6Nh9yRu9RHzqPqYzaGqtCMzEubtmZFFPTrFJf\"]},\"/home/dsz/git/galaxistest/galaxis/contracts/DexAdapters/GX_DEXAdapterBase.sol\":{\"keccak256\":\"0x9cd6bbda6ac66da58669ae488b7b7ded565b08b0b8f145c10534c0a222de6222\",\"urls\":[\"bzz-raw://25d343c0566b72b3a2ae8b939f40bb2b8f1ffdfd0f5ec301f557ca0d35c53f8a\",\"dweb:/ipfs/QmT6zguP6ZAZ8BA7YeoX5vvdb4FnKMjouTSrTgWpNj98iS\"]},\"/home/dsz/git/galaxistest/galaxis/contracts/DexAdapters/GX_KyberAdapter.sol\":{\"keccak256\":\"0xb9d3ba5575adb372c517ac2bbc11c326da6823356b238059d84653537b2a90e9\",\"urls\":[\"bzz-raw://7dbcf279b3525b0ab6931882d51c4d670dddfea0b32a7ca8ab5f92d40bbfee47\",\"dweb:/ipfs/QmQh1YspBMPurngqtWZy4auxAoGHNx13j9B5H2RUEcGkD5\"]},\"/home/dsz/git/galaxistest/galaxis/contracts/DexAdapters/GX_UniswapAdapter.sol\":{\"keccak256\":\"0x5b905224eaa24fff37d1c7e0fea81282cd9bcccc23b76ed7c7634f54574b4524\",\"urls\":[\"bzz-raw://6d79f58dbd8887adccc67c771701fa46a96404a1160f815f965a915d328389b8\",\"dweb:/ipfs/QmPW6TvGFeEo41J2VzkwB6zprBESTvWq237MrvrQ25HADR\"]},\"/home/dsz/git/galaxistest/galaxis/contracts/DexAdapters/GX_ZeroXAdapter.sol\":{\"keccak256\":\"0x6f3c3945ae997b672d33ef7462b45c27dc53662e175dc835b265842bc37fd788\",\"urls\":[\"bzz-raw://9fa7b45202681550cfc82478aa977524343eafa98bec2b00d55ab535615cfbed\",\"dweb:/ipfs/QmTKxjvMFrN6QyZY27E2WWr7UohvXkqG8F12FrJsabGCXT\"]},\"/home/dsz/git/galaxistest/galaxis/contracts/DexInterfaces/KyberInterface.sol\":{\"keccak256\":\"0x2c2b83c64b4c3980caebee37f3a8cb32e67da0222a8ff04a829aa785ec0e7112\",\"urls\":[\"bzz-raw://5e268d24636bbd90a25640d928973a34bce74b78f1dbfe23f1cd3d6de2a32ce9\",\"dweb:/ipfs/QmPca4GA1Kh4QYKNr5ASFvP9hEaMbtQyemHGQqQj5x9Wfr\"]},\"/home/dsz/git/galaxistest/galaxis/contracts/FundManager/GX_GeneralOrderInterface.sol\":{\"keccak256\":\"0xa04b99fe67c87cb4e59c7e3e15fc5e8ef2618bc6e2ef71296c06a709518c2b1a\",\"urls\":[\"bzz-raw://51cb83162e91aa99217fe3b7ce8159b4b7bd1f7a2b7abdf2a16e62eb57560e55\",\"dweb:/ipfs/QmZ9gU82EuUYa1joGt8jYBUjiv1JQwPoExh3FLmt56kqUT\"]},\"/home/dsz/git/galaxistest/galaxis/contracts/Governance/GX_GovernanceAdmin.sol\":{\"keccak256\":\"0x366d9f22e06078cae2774e6a7a980195623956248862ab8be94c89591574a0da\",\"urls\":[\"bzz-raw://6771548bddcd894d9f3de922232c65e9f931fa74ec19d871e27920f5943dd57a\",\"dweb:/ipfs/QmcjkJRvPXAzGfWrByLjjwWqgYKTyhrNoZe8PK5ZwkMqGx\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]}},\"version\":1}",
  "bytecode": "0x6080604052600480546001600160a01b031916734f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa17905534801561003657600080fd5b50336000908152602081905260409020805460ff19166001179055600380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d1790556116d9806100866000396000f3fe6080604052600436106100fe5760003560e01c8063775fec6211610095578063e036104b11610064578063e036104b146103f7578063e8dcd6201461043a578063f965448d14610476578063fc78b2e8146104ba578063ff22723a146104ed576100fe565b8063775fec62146102cb5780639b5f292e1461031d5780639f19b1cb1461037d578063c1a42243146103c4576100fe565b8063373c3e76116100d1578063373c3e761461020a578063514fcac71461023d5780637048027514610267578063735de9f71461029a576100fe565b80631785f53c14610103578063185471521461013857806324d7806c14610165578063288916eb146101ac575b600080fd5b34801561010f57600080fd5b506101366004803603602081101561012657600080fd5b50356001600160a01b031661050a565b005b34801561014457600080fd5b506101366004803603602081101561015b57600080fd5b503560ff166105a6565b34801561017157600080fd5b506101986004803603602081101561018857600080fd5b50356001600160a01b0316610642565b604080519115158252519081900360200190f35b3480156101b857600080fd5b506101f8600480360360808110156101cf57600080fd5b5060ff813516906001600160a01b03602082013581169160408101359091169060600135610660565b60408051918252519081900360200190f35b34801561021657600080fd5b506101366004803603602081101561022d57600080fd5b50356001600160a01b03166107ba565b34801561024957600080fd5b506101366004803603602081101561026057600080fd5b503561085c565b34801561027357600080fd5b506101366004803603602081101561028a57600080fd5b50356001600160a01b031661085f565b3480156102a657600080fd5b506102af6108fe565b604080516001600160a01b039092168252519081900360200190f35b3480156102d757600080fd5b50610136600480360360a08110156102ee57600080fd5b5060ff813516906001600160a01b0360208201358116916040810135909116906060810135906080013561090d565b34801561032957600080fd5b5061034a6004803603602081101561034057600080fd5b503560ff16610a53565b6040518083600281111561035a57fe5b60ff1681526001600160a01b039092166020830152506040805191829003019150f35b34801561038957600080fd5b50610136600480360360608110156103a057600080fd5b50803560ff90811691602081013590911690604001356001600160a01b0316610a7d565b3480156103d057600080fd5b50610136600480360360208110156103e757600080fd5b50356001600160a01b0316610bac565b34801561040357600080fd5b506101f86004803603606081101561041a57600080fd5b506001600160a01b03813581169160208101359160409091013516610c48565b6101366004803603608081101561045057600080fd5b506001600160a01b03813581169160208101359160408201358116916060013516610c51565b610136600480360360a081101561048c57600080fd5b506001600160a01b038135811691602081013591604082013581169160608101359160809091013516610e32565b3480156104c657600080fd5b50610198600480360360208110156104dd57600080fd5b50356001600160a01b0316611011565b6101366004803603602081101561050357600080fd5b503561102f565b3360009081526020819052604090205460ff16151560011461055d5760405162461bcd60e51b81526004018080602001828103825260348152602001806116706034913960400191505060405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff19169055517f6a35edfb19dff31b968882a3f9eeef54e0ca71bb9af2db6e085f409715d3c5479190a250565b3360009081526020819052604090205460ff1615156001146105f95760405162461bcd60e51b81526004018080602001828103825260348152602001806116706034913960400191505060405180910390fd5b60ff811660008181526002602052604080822080546001600160a81b0319169055517fabb8cac8af599331750e1284d535d9920cec7b858a03251e27f5208591a9870e9190a250565b6001600160a01b031660009081526020819052604090205460ff1690565b60ff841660009081526002602052604081205461010090046001600160a01b03166106cc576040805162461bcd60e51b815260206004820152601760248201527611d85b185e1a5cce8811195e081a5cc81b9bdd081cd95d604a1b604482015290519081900360640190fd5b60ff858116600090815260026020819052604090912054909116818111156106f057fe5b14156106fe575060006107b2565b600060ff8087166000908152600260208190526040909120549091169081111561072457fe5b1415610732575060006107b2565b60ff858116600090815260026020819052604090912054600192169081111561075757fe5b1415610765575060006107b2565b6040805162461bcd60e51b815260206004820152601e60248201527f47616c617869733a20756e6b6f6e776e2065786368616e676520747970650000604482015290519081900360640190fd5b949350505050565b3360009081526020819052604090205460ff16151560011461080d5760405162461bcd60e51b81526004018080602001828103825260348152602001806116706034913960400191505060405180910390fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fa939b18300f53158576c00561d9810d163a1fd7971e0beb2deb3da9d6d6c5ae19190a250565b50565b3360009081526020819052604090205460ff1615156001146108b25760405162461bcd60e51b81526004018080602001828103825260348152602001806116706034913960400191505060405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff19166001179055517fd7f0afc2242fe9a5f45af6dea542902933e36c643299a53b1057b13cf8bcad809190a250565b6003546001600160a01b031681565b60ff851660009081526002602052604090205461010090046001600160a01b0316610979576040805162461bcd60e51b815260206004820152601760248201527611d85b185e1a5cce8811195e081a5cc81b9bdd081cd95d604a1b604482015290519081900360640190fd5b60ff8581166000908152600260208190526040909120549091168181111561099d57fe5b14156109b5576109b084848433306111fa565b610a3f565b600060ff808716600090815260026020819052604090912054909116908111156109db57fe5b1415610a135760ff85166000908152600260205260409020546109b090859084908690859061010090046001600160a01b0316610e32565b60ff8581166000908152600260208190526040909120546001921690811115610a3857fe5b1415610765575b610a4c85858585856114a5565b5050505050565b60ff908116600090815260026020526040902054908116916101009091046001600160a01b031690565b3360009081526020819052604090205460ff161515600114610ad05760405162461bcd60e51b81526004018080602001828103825260348152602001806116706034913960400191505060405180910390fd5b6040518060400160405280836002811115610ae757fe5b81526001600160a01b03831660209182015260ff85166000908152600291829052604090208251815491929091839160ff19909116906001908490811115610b2b57fe5b0217905550602091909101518154610100600160a81b0319166101006001600160a01b0392831602179091556040519082169060ff8516907fb2adc6c11d1b970bf9414ad19866ff1fd17e3d64461e5e63265e6994264f724990859080826002811115610b9457fe5b60ff16815260200191505060405180910390a3505050565b3360009081526020819052604090205460ff161515600114610bff5760405162461bcd60e51b81526004018080602001828103825260348152602001806116706034913960400191505060405180910390fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517fdbe139b9dcaabbb09bc4b530bfb2f8d390bd0ac7cd6e9c87a80468cc8ca709df9190a250565b60009392505050565b6001600160a01b038416610ce55760408051633d15022b60e11b81526001600160a01b03848116600483015260006024830152915191831691637a2a0456918691604480830192602092919082900301818588803b158015610cb257600080fd5b505af1158015610cc6573d6000803e3d6000fd5b50505050506040513d6020811015610cdd57600080fd5b50610e2c9050565b6001600160a01b038216610d8657806001600160a01b0316633bba21dc858560006040518463ffffffff1660e01b815260040180846001600160a01b03166001600160a01b031681526020018381526020018281526020019350505050602060405180830381600087803b158015610d5c57600080fd5b505af1158015610d70573d6000803e3d6000fd5b505050506040513d6020811015610cdd57600080fd5b6040805163cb3c28c760e01b81526001600160a01b03868116600483015260248201869052848116604483015233606483015260006084830181905260a4830181905260c4830181905292519084169263cb3c28c79260e480820193602093909283900390910190829087803b158015610dff57600080fd5b505af1158015610e13573d6000803e3d6000fd5b505050506040513d6020811015610e2957600080fd5b50505b50505050565b6001600160a01b038516610ed357806001600160a01b0316637a2a04568585856040518463ffffffff1660e01b815260040180836001600160a01b03166001600160a01b03168152602001828152602001925050506020604051808303818588803b158015610ea057600080fd5b505af1158015610eb4573d6000803e3d6000fd5b50505050506040513d6020811015610ecb57600080fd5b50610a4c9050565b6001600160a01b038316610f655760408051630eee887760e21b81526001600160a01b0387811660048301526024820187905260448201859052915191831691633bba21dc916064808201926020929091908290030181600087803b158015610f3b57600080fd5b505af1158015610f4f573d6000803e3d6000fd5b505050506040513d6020811015610ecb57600080fd5b6040805163cb3c28c760e01b81526001600160a01b03878116600483015260248201879052858116604483015233606483015260006084830181905260a4830186905260c4830181905292519084169263cb3c28c79260e480820193602093909283900390910190829087803b158015610fde57600080fd5b505af1158015610ff2573d6000803e3d6000fd5b505050506040513d602081101561100857600080fd5b50505050505050565b6001600160a01b031660009081526001602052604090205460ff1690565b600354600f4201906001600160a01b031663fb3bdb41348461104f611506565b30866040518663ffffffff1660e01b81526004018085815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156110c45781810151838201526020016110ac565b50505050905001955050505050506000604051808303818588803b1580156110eb57600080fd5b505af11580156110ff573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052602081101561112957600080fd5b810190808051604051939291908464010000000082111561114957600080fd5b90830190602082018581111561115e57600080fd5b825186602082028301116401000000008211171561117b57600080fd5b82525081516020918201928201910280838360005b838110156111a8578181015183820152602001611190565b50505050919091016040819052339550479450925060009150829050818185875af1925050503d8060008114610a4c576040519150601f19603f3d011682016040523d82523d6000602084013e610a4c565b600354600f4201906001600160a01b03166338ed173985600061121d8a8a6115ef565b87866040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015611298578181015183820152602001611280565b505050509050019650505050505050600060405180830381600087803b1580156112c157600080fd5b505af11580156112d5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156112fe57600080fd5b810190808051604051939291908464010000000082111561131e57600080fd5b90830190602082018581111561133357600080fd5b825186602082028301116401000000008211171561135057600080fd5b82525081516020918201928201910280838360005b8381101561137d578181015183820152602001611365565b50505050919091016040818152636eb1769f60e11b82526001600160a01b038a81166004840152898116602484015290518d975060009650908716945063dd62ed3e935060448083019350602092829003018186803b1580156113df57600080fd5b505afa1580156113f3573d6000803e3d6000fd5b505050506040513d602081101561140957600080fd5b50519050801561149b57604080516323b872dd60e01b81526001600160a01b0386811660048301528781166024830152604482018490529151918416916323b872dd916064808201926020929091908290030181600087803b15801561146e57600080fd5b505af1158015611482573d6000803e3d6000fd5b505050506040513d602081101561149857600080fd5b50505b5050505050505050565b6040805160ff871681526001600160a01b038087166020830152851681830152606081018490526080810183905290517fa86848877ec87d996e71aa1c410df4a53ed959b6d90c4d85dae5ecb95b47fca89181900360a00190a15050505050565b6040805160028082526060808301845292839291906020830190803683375050600354604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c464892506004808301926020929190829003018186803b15801561156e57600080fd5b505afa158015611582573d6000803e3d6000fd5b505050506040513d602081101561159857600080fd5b5051815182906000906115a757fe5b6001600160a01b0392831660209182029290920101526004548251911690829060019081106115d257fe5b6001600160a01b0390921660209283029190910190910152905090565b604080516002808252606080830184529283929190602083019080368337019050509050838160008151811061162157fe5b60200260200101906001600160a01b031690816001600160a01b031681525050828160018151811061164f57fe5b6001600160a01b039092166020928302919091019091015290509291505056fe47616c617869733a204163636573732064656e6965643a206e6f7420616e2061646d696e206f662074686520636f6e7472616374a26469706673582212205a8c3c7c5fb853192cb74deddbb049fa5162e3227e717e79cb6d76c3ae9d8a0264736f6c63430006050033",
  "deployedBytecode": "0x6080604052600436106100fe5760003560e01c8063775fec6211610095578063e036104b11610064578063e036104b146103f7578063e8dcd6201461043a578063f965448d14610476578063fc78b2e8146104ba578063ff22723a146104ed576100fe565b8063775fec62146102cb5780639b5f292e1461031d5780639f19b1cb1461037d578063c1a42243146103c4576100fe565b8063373c3e76116100d1578063373c3e761461020a578063514fcac71461023d5780637048027514610267578063735de9f71461029a576100fe565b80631785f53c14610103578063185471521461013857806324d7806c14610165578063288916eb146101ac575b600080fd5b34801561010f57600080fd5b506101366004803603602081101561012657600080fd5b50356001600160a01b031661050a565b005b34801561014457600080fd5b506101366004803603602081101561015b57600080fd5b503560ff166105a6565b34801561017157600080fd5b506101986004803603602081101561018857600080fd5b50356001600160a01b0316610642565b604080519115158252519081900360200190f35b3480156101b857600080fd5b506101f8600480360360808110156101cf57600080fd5b5060ff813516906001600160a01b03602082013581169160408101359091169060600135610660565b60408051918252519081900360200190f35b34801561021657600080fd5b506101366004803603602081101561022d57600080fd5b50356001600160a01b03166107ba565b34801561024957600080fd5b506101366004803603602081101561026057600080fd5b503561085c565b34801561027357600080fd5b506101366004803603602081101561028a57600080fd5b50356001600160a01b031661085f565b3480156102a657600080fd5b506102af6108fe565b604080516001600160a01b039092168252519081900360200190f35b3480156102d757600080fd5b50610136600480360360a08110156102ee57600080fd5b5060ff813516906001600160a01b0360208201358116916040810135909116906060810135906080013561090d565b34801561032957600080fd5b5061034a6004803603602081101561034057600080fd5b503560ff16610a53565b6040518083600281111561035a57fe5b60ff1681526001600160a01b039092166020830152506040805191829003019150f35b34801561038957600080fd5b50610136600480360360608110156103a057600080fd5b50803560ff90811691602081013590911690604001356001600160a01b0316610a7d565b3480156103d057600080fd5b50610136600480360360208110156103e757600080fd5b50356001600160a01b0316610bac565b34801561040357600080fd5b506101f86004803603606081101561041a57600080fd5b506001600160a01b03813581169160208101359160409091013516610c48565b6101366004803603608081101561045057600080fd5b506001600160a01b03813581169160208101359160408201358116916060013516610c51565b610136600480360360a081101561048c57600080fd5b506001600160a01b038135811691602081013591604082013581169160608101359160809091013516610e32565b3480156104c657600080fd5b50610198600480360360208110156104dd57600080fd5b50356001600160a01b0316611011565b6101366004803603602081101561050357600080fd5b503561102f565b3360009081526020819052604090205460ff16151560011461055d5760405162461bcd60e51b81526004018080602001828103825260348152602001806116706034913960400191505060405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff19169055517f6a35edfb19dff31b968882a3f9eeef54e0ca71bb9af2db6e085f409715d3c5479190a250565b3360009081526020819052604090205460ff1615156001146105f95760405162461bcd60e51b81526004018080602001828103825260348152602001806116706034913960400191505060405180910390fd5b60ff811660008181526002602052604080822080546001600160a81b0319169055517fabb8cac8af599331750e1284d535d9920cec7b858a03251e27f5208591a9870e9190a250565b6001600160a01b031660009081526020819052604090205460ff1690565b60ff841660009081526002602052604081205461010090046001600160a01b03166106cc576040805162461bcd60e51b815260206004820152601760248201527611d85b185e1a5cce8811195e081a5cc81b9bdd081cd95d604a1b604482015290519081900360640190fd5b60ff858116600090815260026020819052604090912054909116818111156106f057fe5b14156106fe575060006107b2565b600060ff8087166000908152600260208190526040909120549091169081111561072457fe5b1415610732575060006107b2565b60ff858116600090815260026020819052604090912054600192169081111561075757fe5b1415610765575060006107b2565b6040805162461bcd60e51b815260206004820152601e60248201527f47616c617869733a20756e6b6f6e776e2065786368616e676520747970650000604482015290519081900360640190fd5b949350505050565b3360009081526020819052604090205460ff16151560011461080d5760405162461bcd60e51b81526004018080602001828103825260348152602001806116706034913960400191505060405180910390fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fa939b18300f53158576c00561d9810d163a1fd7971e0beb2deb3da9d6d6c5ae19190a250565b50565b3360009081526020819052604090205460ff1615156001146108b25760405162461bcd60e51b81526004018080602001828103825260348152602001806116706034913960400191505060405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff19166001179055517fd7f0afc2242fe9a5f45af6dea542902933e36c643299a53b1057b13cf8bcad809190a250565b6003546001600160a01b031681565b60ff851660009081526002602052604090205461010090046001600160a01b0316610979576040805162461bcd60e51b815260206004820152601760248201527611d85b185e1a5cce8811195e081a5cc81b9bdd081cd95d604a1b604482015290519081900360640190fd5b60ff8581166000908152600260208190526040909120549091168181111561099d57fe5b14156109b5576109b084848433306111fa565b610a3f565b600060ff808716600090815260026020819052604090912054909116908111156109db57fe5b1415610a135760ff85166000908152600260205260409020546109b090859084908690859061010090046001600160a01b0316610e32565b60ff8581166000908152600260208190526040909120546001921690811115610a3857fe5b1415610765575b610a4c85858585856114a5565b5050505050565b60ff908116600090815260026020526040902054908116916101009091046001600160a01b031690565b3360009081526020819052604090205460ff161515600114610ad05760405162461bcd60e51b81526004018080602001828103825260348152602001806116706034913960400191505060405180910390fd5b6040518060400160405280836002811115610ae757fe5b81526001600160a01b03831660209182015260ff85166000908152600291829052604090208251815491929091839160ff19909116906001908490811115610b2b57fe5b0217905550602091909101518154610100600160a81b0319166101006001600160a01b0392831602179091556040519082169060ff8516907fb2adc6c11d1b970bf9414ad19866ff1fd17e3d64461e5e63265e6994264f724990859080826002811115610b9457fe5b60ff16815260200191505060405180910390a3505050565b3360009081526020819052604090205460ff161515600114610bff5760405162461bcd60e51b81526004018080602001828103825260348152602001806116706034913960400191505060405180910390fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517fdbe139b9dcaabbb09bc4b530bfb2f8d390bd0ac7cd6e9c87a80468cc8ca709df9190a250565b60009392505050565b6001600160a01b038416610ce55760408051633d15022b60e11b81526001600160a01b03848116600483015260006024830152915191831691637a2a0456918691604480830192602092919082900301818588803b158015610cb257600080fd5b505af1158015610cc6573d6000803e3d6000fd5b50505050506040513d6020811015610cdd57600080fd5b50610e2c9050565b6001600160a01b038216610d8657806001600160a01b0316633bba21dc858560006040518463ffffffff1660e01b815260040180846001600160a01b03166001600160a01b031681526020018381526020018281526020019350505050602060405180830381600087803b158015610d5c57600080fd5b505af1158015610d70573d6000803e3d6000fd5b505050506040513d6020811015610cdd57600080fd5b6040805163cb3c28c760e01b81526001600160a01b03868116600483015260248201869052848116604483015233606483015260006084830181905260a4830181905260c4830181905292519084169263cb3c28c79260e480820193602093909283900390910190829087803b158015610dff57600080fd5b505af1158015610e13573d6000803e3d6000fd5b505050506040513d6020811015610e2957600080fd5b50505b50505050565b6001600160a01b038516610ed357806001600160a01b0316637a2a04568585856040518463ffffffff1660e01b815260040180836001600160a01b03166001600160a01b03168152602001828152602001925050506020604051808303818588803b158015610ea057600080fd5b505af1158015610eb4573d6000803e3d6000fd5b50505050506040513d6020811015610ecb57600080fd5b50610a4c9050565b6001600160a01b038316610f655760408051630eee887760e21b81526001600160a01b0387811660048301526024820187905260448201859052915191831691633bba21dc916064808201926020929091908290030181600087803b158015610f3b57600080fd5b505af1158015610f4f573d6000803e3d6000fd5b505050506040513d6020811015610ecb57600080fd5b6040805163cb3c28c760e01b81526001600160a01b03878116600483015260248201879052858116604483015233606483015260006084830181905260a4830186905260c4830181905292519084169263cb3c28c79260e480820193602093909283900390910190829087803b158015610fde57600080fd5b505af1158015610ff2573d6000803e3d6000fd5b505050506040513d602081101561100857600080fd5b50505050505050565b6001600160a01b031660009081526001602052604090205460ff1690565b600354600f4201906001600160a01b031663fb3bdb41348461104f611506565b30866040518663ffffffff1660e01b81526004018085815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156110c45781810151838201526020016110ac565b50505050905001955050505050506000604051808303818588803b1580156110eb57600080fd5b505af11580156110ff573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052602081101561112957600080fd5b810190808051604051939291908464010000000082111561114957600080fd5b90830190602082018581111561115e57600080fd5b825186602082028301116401000000008211171561117b57600080fd5b82525081516020918201928201910280838360005b838110156111a8578181015183820152602001611190565b50505050919091016040819052339550479450925060009150829050818185875af1925050503d8060008114610a4c576040519150601f19603f3d011682016040523d82523d6000602084013e610a4c565b600354600f4201906001600160a01b03166338ed173985600061121d8a8a6115ef565b87866040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015611298578181015183820152602001611280565b505050509050019650505050505050600060405180830381600087803b1580156112c157600080fd5b505af11580156112d5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156112fe57600080fd5b810190808051604051939291908464010000000082111561131e57600080fd5b90830190602082018581111561133357600080fd5b825186602082028301116401000000008211171561135057600080fd5b82525081516020918201928201910280838360005b8381101561137d578181015183820152602001611365565b50505050919091016040818152636eb1769f60e11b82526001600160a01b038a81166004840152898116602484015290518d975060009650908716945063dd62ed3e935060448083019350602092829003018186803b1580156113df57600080fd5b505afa1580156113f3573d6000803e3d6000fd5b505050506040513d602081101561140957600080fd5b50519050801561149b57604080516323b872dd60e01b81526001600160a01b0386811660048301528781166024830152604482018490529151918416916323b872dd916064808201926020929091908290030181600087803b15801561146e57600080fd5b505af1158015611482573d6000803e3d6000fd5b505050506040513d602081101561149857600080fd5b50505b5050505050505050565b6040805160ff871681526001600160a01b038087166020830152851681830152606081018490526080810183905290517fa86848877ec87d996e71aa1c410df4a53ed959b6d90c4d85dae5ecb95b47fca89181900360a00190a15050505050565b6040805160028082526060808301845292839291906020830190803683375050600354604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c464892506004808301926020929190829003018186803b15801561156e57600080fd5b505afa158015611582573d6000803e3d6000fd5b505050506040513d602081101561159857600080fd5b5051815182906000906115a757fe5b6001600160a01b0392831660209182029290920101526004548251911690829060019081106115d257fe5b6001600160a01b0390921660209283029190910190910152905090565b604080516002808252606080830184529283929190602083019080368337019050509050838160008151811061162157fe5b60200260200101906001600160a01b031690816001600160a01b031681525050828160018151811061164f57fe5b6001600160a01b039092166020928302919091019091015290509291505056fe47616c617869733a204163636573732064656e6965643a206e6f7420616e2061646d696e206f662074686520636f6e7472616374a26469706673582212205a8c3c7c5fb853192cb74deddbb049fa5162e3227e717e79cb6d76c3ae9d8a0264736f6c63430006050033",
  "immutableReferences": {},
  "sourceMap": "517:2259:5:-:0;;;452:74:9;;;-1:-1:-1;;;;;;452:74:9;484:42;452:74;;;666:28:5;2:2:-1;;;;27:1;24;17:12;2:2;-1:-1;653:10:23;646:6;:18;;;;;;;;;;:25;;-1:-1:-1;;646:25:23;667:4;646:25;;;564:13:9;:58;;-1:-1:-1;;;;;;564:58:9;357:42;564:58;;;517:2259:5;;;;;;",
  "deployedSourceMap": "517:2259:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1304:155:23;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1304:155:23;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1304:155:23;-1:-1:-1;;;;;1304:155:23;;:::i;:::-;;1601:116:1;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1601:116:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1601:116:1;;;;:::i;1603::23:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1603:116:23;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1603:116:23;-1:-1:-1;;;;;1603:116:23;;:::i;:::-;;;;;;;;;;;;;;;;;;2224:548:5;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2224:548:5;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;2224:548:5;;;;;-1:-1:-1;;;;;2224:548:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;809:135:4;;5:9:-1;2:2;;;27:1;24;17:12;2:2;809:135:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;809:135:4;-1:-1:-1;;;;;809:135:4;;:::i;1910:63:5:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1910:63:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1910:63:5;;:::i;1028:134:23:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1028:134:23;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1028:134:23;-1:-1:-1;;;;;1028:134:23;;:::i;407:39:9:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;407:39:9;;;:::i;:::-;;;;-1:-1:-1;;;;;407:39:9;;;;;;;;;;;;;;1023:771:5;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1023:771:5;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;1023:771:5;;;;;-1:-1:-1;;;;;1023:771:5;;;;;;;;;;;;;;;;;;;;;;;;:::i;1846:156:1:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1846:156:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1846:156:1;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1846:156:1;;;;;;;-1:-1:-1;1846:156:1;;;;;;;;;-1:-1:-1;1846:156:1;1248:199;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1248:199:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1248:199:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1248:199:1;;:::i;1085:156:4:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1085:156:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1085:156:4;-1:-1:-1;;;;;1085:156:4;;:::i;4081:624:8:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4081:624:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4081:624:8;;;;;;;;;;;;;;;;;:::i;2188:1886::-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;;2188:1886:8;;;;;;;;;;;;;;;;;;;;;;:::i;276:1906::-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;;276:1906:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1395:117:4:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1395:117:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1395:117:4;-1:-1:-1;;;;;1395:117:4;;:::i;635:396:9:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;635:396:9;;:::i;1304:155:23:-;787:10;780:6;:18;;;;;;;;;;;;;:26;;:18;:26;772:91;;;;-1:-1:-1;;;772:91:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1376:22:23;::::1;1401:5;1376:22:::0;;;::::1;::::0;;;;;;;:30;;-1:-1:-1;;1376:30:23::1;::::0;;1421:31;::::1;::::0;1401:5;1421:31:::1;1304:155:::0;:::o;1601:116:1:-;787:10:23;780:6;:18;;;;;;;;;;;;;:26;;:18;:26;772:91;;;;-1:-1:-1;;;772:91:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1666:10:1::1;::::0;::::1;;::::0;;;:4:::1;:10;::::0;;;;;1659:17;;-1:-1:-1;;;;;;1659:17:1;;;1691:19;::::1;::::0;1666:10;1691:19:::1;1601:116:::0;:::o;1603::23:-;-1:-1:-1;;;;;1689:23:23;1666:4;1689:23;;;;;;;;;;;;;;1603:116::o;2224:548:5:-;2366:10;;;2342:4;2366:10;;;:4;:10;;;;;:21;;;;-1:-1:-1;;;;;2366:21:5;2358:71;;;;;-1:-1:-1;;;2358:71:5;;;;;;;;;;;;-1:-1:-1;;;2358:71:5;;;;;;;;;;;;;;;2443:10;;;;;;;;2465:15;2443:10;;;;;;;;:18;2465:15;;2443:18;:37;;;;;;;;;2440:325;;;-1:-1:-1;2504:1:5;2497:8;;2440:325;2556:13;2534:10;;;;;;;;:4;:10;;;;;;;;:18;;;;;:35;;;;;;;;2530:235;;;-1:-1:-1;2593:1:5;2586:8;;2530:235;2623:10;;;;;;;;:4;:10;;;;;;;;:18;2645:13;;2623:18;;:35;;;;;;;;2619:146;;;-1:-1:-1;2682:1:5;2675:8;;2619:146;2714:40;;;-1:-1:-1;;;2714:40:5;;;;;;;;;;;;;;;;;;;;;;;;;;;2619:146;2224:548;;;;;;:::o;809:135:4:-;787:10:23;780:6;:18;;;;;;;;;;;;;:26;;:18;:26;772:91;;;;-1:-1:-1;;;772:91:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;873:18:4;::::1;;::::0;;;894:4:::1;873:18;::::0;;;;;;;:25;;-1:-1:-1;;873:25:4::1;::::0;;::::1;::::0;;;913:24;::::1;::::0;873:18;913:24:::1;809:135:::0;:::o;1910:63:5:-;;:::o;1028:134:23:-;787:10;780:6;:18;;;;;;;;;;;;;:26;;:18;:26;772:91;;;;-1:-1:-1;;;772:91:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1092:17:23;::::1;:6;:17:::0;;;::::1;::::0;;;;;;;:24;;-1:-1:-1;;1092:24:23::1;1112:4;1092:24;::::0;;1131;::::1;::::0;1092:6;1131:24:::1;1028:134:::0;:::o;407:39:9:-;;;-1:-1:-1;;;;;407:39:9;;:::o;1023:771:5:-;1160:10;;;1193:1;1160:10;;;:4;:10;;;;;:21;;;;-1:-1:-1;;;;;1160:21:5;1152:71;;;;;-1:-1:-1;;;1152:71:5;;;;;;;;;;;;-1:-1:-1;;;1152:71:5;;;;;;;;;;;;;;;1237:10;;;;;;;;1259:15;1237:10;;;;;;;;:18;1259:15;;1237:18;:37;;;;;;;;;1234:436;;;1292:73;1310:9;1321:7;1330;1339:10;1359:4;1292:17;:73::i;:::-;1234:436;;;1417:13;1395:10;;;;;;;;:4;:10;;;;;;;;:18;;;;;:35;;;;;;;;1391:279;;;1498:10;;;;;;;:4;:10;;;;;:21;1447:73;;1462:9;;1473:7;;1482;;1491:5;;1498:21;;;-1:-1:-1;;;;;1498:21:5;1447:14;:73::i;1391:279::-;1550:10;;;;;;;;:4;:10;;;;;;;;:18;1572:13;;1550:18;;:35;;;;;;;;1546:124;;;;1729:58;1746:4;1752:9;1763:7;1772;1781:5;1729:16;:58::i;:::-;1023:771;;;;;:::o;1846:156:1:-;1941:16;;;;1905:7;1941:16;;;:4;:16;;;;;:24;;;;;;1967:27;;;-1:-1:-1;;;;;1967:27:1;;1846:156::o;1248:199::-;787:10:23;780:6;:18;;;;;;;;;;;;;:26;;:18;:26;772:91;;;;-1:-1:-1;;;772:91:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1355:30:1::1;;;;;;;;1364:8;1355:30;;;;;;;;::::0;;-1:-1:-1;;;;;1355:30:1;::::1;;::::0;;::::1;::::0;1342:10:::1;::::0;::::1;-1:-1:-1::0;1342:10:1;;;:4:::1;:10:::0;;;;;;;:43;;;;:10;;:43;;:10;;-1:-1:-1;;1342:43:1;;::::1;::::0;;;;;;::::1;;;;;;;;::::0;;-1:-1:-1;1342:43:1::1;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;;1342:43:1::1;;-1:-1:-1::0;;;;;1342:43:1;;::::1;;;::::0;;;1400:40:::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;1418:8;;1400:40;1418:8;1400:40:::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;1248:199:::0;;;:::o;1085:156:4:-;787:10:23;780:6;:18;;;;;;;;;;;;;:26;;:18;:26;772:91;;;;-1:-1:-1;;;772:91:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1157:23:4;::::1;1183:5;1157:23:::0;;;:7:::1;:23;::::0;;;;;:31;;-1:-1:-1;;1157:31:4::1;::::0;;1203;::::1;::::0;1183:5;1203:31:::1;1085:156:::0;:::o;4081:624:8:-;4179:4;4081:624;;;;;:::o;2188:1886::-;-1:-1:-1;;;;;2320:25:8;;2317:1751;;2657:86;;;-1:-1:-1;;;2657:86:8;;-1:-1:-1;;;;;2657:86:8;;;;;;;2741:1;2657:86;;;;;;:43;;;;;;2707:12;;2657:86;;;;;;;;;;;;;;2707:12;2657:43;:86;;;2:2:-1;;;;27:1;24;17:12;2:2;2657:86:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2657:86:8;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2317:1751:8;;-1:-1:-1;2317:1751:8;;-1:-1:-1;;;;;2763:24:8;;2760:1308;;3160:10;-1:-1:-1;;;;;3145:43:8;;3196:11;3210:12;3225:1;3145:82;;;;;;;;;;;;;-1:-1:-1;;;;;3145:82:8;-1:-1:-1;;;;;3145:82:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3145:82:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3145:82:8;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;2760:1308:8;3940:117;;;-1:-1:-1;;;3940:117:8;;-1:-1:-1;;;;;3940:117:8;;;;;;;;;;;;;;;;;;;;4028:10;3940:117;;;;4040:1;3940:117;;;;;;;;;;;;;;;;;;;;:32;;;;;;:117;;;;;;;;;;;;;;;;;;:32;:117;;;2:2:-1;;;;27:1;24;17:12;2:2;3940:117:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3940:117:8;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;2760:1308:8;2188:1886;;;;:::o;276:1906::-;-1:-1:-1;;;;;420:25:8;;417:1759;;772:10;-1:-1:-1;;;;;757:43:8;;807:12;828:10;841:4;757:89;;;;;;;;;;;;;-1:-1:-1;;;;;757:89:8;-1:-1:-1;;;;;757:89:8;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;757:89:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;757:89:8;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;417:1759:8;;-1:-1:-1;417:1759:8;;-1:-1:-1;;;;;866:24:8;;863:1313;;1248:84;;;-1:-1:-1;;;1248:84:8;;-1:-1:-1;;;;;1248:84:8;;;;;;;;;;;;;;;;;;;;;:43;;;;;;:84;;;;;;;;;;;;;;;-1:-1:-1;1248:43:8;:84;;;2:2:-1;;;;27:1;24;17:12;2:2;1248:84:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1248:84:8;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;863:1313:8;2045:120;;;-1:-1:-1;;;2045:120:8;;-1:-1:-1;;;;;2045:120:8;;;;;;;;;;;;;;;;;;;;2133:10;2045:120;;;;2145:1;2045:120;;;;;;;;;;;;;;;;;;;;:32;;;;;;:120;;;;;;;;;;;;;;;;;;:32;:120;;;2:2:-1;;;;27:1;24;17:12;2:2;2045:120:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2045:120:8;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;276:1906:8;;;;;:::o;1395:117:4:-;-1:-1:-1;;;;;1481:24:4;1458:4;1481:24;;;:7;:24;;;;;;;;;1395:117::o;635:396:9:-;808:13;;723:2;717:3;:8;;-1:-1:-1;;;;;808:13:9;:35;850:9;861;872:20;:18;:20::i;:::-;902:4;909:8;808:110;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;808:110:9;-1:-1:-1;;;;;808:110:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;808:110:9;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;808:110:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;808:110:9;;;;;;;39:16:-1;36:1;17:17;2:54;101:4;808:110:9;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;15:2;7:11;;4:2;;;31:1;28;21:12;4:2;808:110:9;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;373:25;;-1:-1;808:110:9;;421:4:-1;412:14;;;;808:110:9;;;;;412:14:-1;808:110:9;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;-1:-1;;;;808:110:9;;;;;;;;976:10;;-1:-1:-1;998:21:9;;-1:-1:-1;808:110:9;-1:-1:-1;976:48:9;;-1:-1:-1;808:110:9;;-1:-1:-1;976:48:9;808:110;998:21;976:10;:48;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;1693:769:9;1980:13;;1860:2;1854:3;:8;;-1:-1:-1;;;;;1980:13:9;:38;2032:7;1838:13;2068:27;2076:9;2087:7;2068;:27::i;:::-;2109:10;2133:8;1980:171;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1980:171:9;-1:-1:-1;;;;;1980:171:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1980:171:9;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1980:171:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1980:171:9;;;;;;39:16:-1;36:1;17:17;2:54;101:4;1980:171:9;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;15:2;7:11;;4:2;;;31:1;28;21:12;4:2;1980:171:9;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;373:25;;-1:-1;1980:171:9;;421:4:-1;412:14;;;;1980:171:9;;;;;412:14:-1;1980:171:9;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;-1:-1;;;;1980:171:9;;;;;;;;-1:-1:-1;;;2287:50:9;;-1:-1:-1;;;;;2287:50:9;;;;;;;;;;;;;;;;2250:9;;-1:-1:-1;2225:15:9;;-1:-1:-1;2287:18:9;;;;-1:-1:-1;2287:18:9;;-1:-1:-1;2287:50:9;;;;;-1:-1:-1;2287:50:9;;;;;;;:18;:50;;;2:2:-1;;;;27:1;24;17:12;2:2;2287:50:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2287:50:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2287:50:9;;-1:-1:-1;2351:13:9;;2347:108;;2380:64;;;-1:-1:-1;;;2380:64:9;;-1:-1:-1;;;;;2380:64:9;;;;;;;;;;;;;;;;;;;;;;:21;;;;;;:64;;;;;;;;;;;;;;;-1:-1:-1;2380:21:9;:64;;;2:2:-1;;;;27:1;24;17:12;2:2;2380:64:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2380:64:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;2347:108:9;1693:769;;;;;;;;:::o;919:264:6:-;1114:49;;;;;;;;-1:-1:-1;;;;;1114:49:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;919:264;;;;;:::o;1215:230:9:-;1319:16;;;1333:1;1319:16;;;1267;1319;;;;;1267;;;1319;1333:1;1319:16;;;;;109:14:-1;1319:16:9;88:42:-1;-1:-1;;1355:13:9;;:20;;;-1:-1:-1;;;1355:20:9;;;;1295:40;;-1:-1:-1;;;;;;1355:13:9;;;;:18;;-1:-1:-1;1355:20:9;;;;;;;;;;;;;;:13;:20;;;2:2:-1;;;;27:1;24;17:12;2:2;1355:20:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1355:20:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1355:20:9;1345:7;;:4;;1350:1;;1345:7;;;;-1:-1:-1;;;;;1345:30:9;;;:7;;;;;;;;;:30;1395:13;;1385:7;;1395:13;;;1385:4;;1395:13;;1385:7;;;;;;-1:-1:-1;;;;;1385:23:9;;;:7;;;;;;;;;;;:23;1434:4;-1:-1:-1;1215:230:9;:::o;1451:236::-;1578:16;;;1592:1;1578:16;;;1526;1578;;;;;1526;;;1578;1592:1;1578:16;;;;;109:14:-1;1578:16:9;88:42:-1;144:17;;-1:-1;1578:16:9;1554:40;;1614:9;1604:4;1609:1;1604:7;;;;;;;;;;;;;:19;-1:-1:-1;;;;;1604:19:9;;;-1:-1:-1;;;;;1604:19:9;;;;;1643:7;1633:4;1638:1;1633:7;;;;;;;;-1:-1:-1;;;;;1633:17:9;;;:7;;;;;;;;;;;:17;1676:4;-1:-1:-1;1451:236:9;;;;:::o",
  "source": "pragma solidity ^0.6.0;\n\nimport './GX_DEXManagerBase.sol';\nimport '../Composition/GX_TrustedParties.sol';\nimport '../Composition/GX_DEXRegistry.sol';\n\nimport '../FundManager/GX_GeneralOrderInterface.sol';\n\nimport '../DexAdapters/GX_UniswapAdapter.sol';\nimport '../DexAdapters/GX_ZeroXAdapter.sol';\nimport '../DexAdapters/GX_KyberAdapter.sol';\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @author Solidity Services\n/// @title Galaxis: DEX manager\n/// @notice Services for the decentralized exchanges\ncontract GX_DEXManager is GX_DEXManagerBase, GX_UniswapAdapter, GX_ZeroXAdapter, GX_KyberAdapter {\n\n    /// STATE VARIABLES\n\n    /// CONSTRUCTOR\n    constructor() public {\n    }\n\n    /// MODIFIERS\n\n    /// TRANSACTIONS\n\n    /// @notice placing order to an exchange\n    /// @dev ...\n    /// @param _dex dex exchange or adapter number\n    /// @param _tknOffer token to offer\n    /// @param _tknGet token to get\n    /// @param _amount amount to exchange\n    /// @param _rate expected rate of the exchange\n    function placeOrder(uint8 _dex, address _tknOffer, address _tknGet, uint _amount, uint _rate)\n        public override {\n\n        require(dexs[_dex].dexAddress != address(0), \"Galaxis: Dex is not set\");\n\n        if(dexs[_dex].dexType == DEXType.Uniswap) {\n\n             swapTokensUniswap(_tknOffer, _tknGet, _amount, msg.sender, address(this));\n\n        }\n        else if (dexs[_dex].dexType == DEXType.Kyber) {\n\n            makeOrderKyber(_tknOffer, _amount, _tknGet, _rate, dexs[_dex].dexAddress);\n\n        }\n        else if (dexs[_dex].dexType == DEXType.ZeroX) {\n\n        } else {\n            revert(\"Galaxis: unkonwn exchange type\");\n        } \n\n        // calling super for emitting the event\n        super.placeOrder(_dex, _tknOffer, _tknGet, _amount, _rate);\n    }\n\n    /// @notice placing order to an exchange\n    /// @dev ...\n    /// @param _orderId cancelling the order id\n    function cancelOrder(uint256 _orderId) public override {\n\n    }\n\n        /// @notice getting change rate for a given token change on an exchange\n    /// @dev ...\n    /// @param _dex dex number\n    /// @param _tknOffer token to offer\n    /// @param _tknGet token to get\n    /// @param _amount amount to echange\n    function getChangeRate(uint8 _dex, address _tknOffer, address _tknGet, uint _amount) public override virtual returns (uint){\n\n        require(dexs[_dex].dexAddress != address(0), \"Galaxis: Dex is not set\");\n\n        if(dexs[_dex].dexType == DEXType.Uniswap) {\n\n            return 0;\n        }\n        else if (dexs[_dex].dexType == DEXType.Kyber) {\n\n            return 0;\n        }\n        else if (dexs[_dex].dexType == DEXType.ZeroX) {\n\n            return 0;\n        } else {\n            revert(\"Galaxis: unkonwn exchange type\");\n        } \n    }\n\n\n}\n",
  "sourcePath": "/home/dsz/git/galaxistest/galaxis/contracts/DEXManager/GX_DEXManager.sol",
  "ast": {
    "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/DEXManager/GX_DEXManager.sol",
    "exportedSymbols": {
      "GX_DEXManager": [
        512
      ]
    },
    "id": 513,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 320,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/DEXManager/GX_DEXManagerBase.sol",
        "file": "./GX_DEXManagerBase.sol",
        "id": 321,
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 589,
        "src": "25:33:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/Composition/GX_TrustedParties.sol",
        "file": "../Composition/GX_TrustedParties.sol",
        "id": 322,
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 319,
        "src": "59:46:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/Composition/GX_DEXRegistry.sol",
        "file": "../Composition/GX_DEXRegistry.sol",
        "id": 323,
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 142,
        "src": "106:43:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/FundManager/GX_GeneralOrderInterface.sol",
        "file": "../FundManager/GX_GeneralOrderInterface.sol",
        "id": 324,
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 1721,
        "src": "151:53:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/DexAdapters/GX_UniswapAdapter.sol",
        "file": "../DexAdapters/GX_UniswapAdapter.sol",
        "id": 325,
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 982,
        "src": "206:46:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/DexAdapters/GX_ZeroXAdapter.sol",
        "file": "../DexAdapters/GX_ZeroXAdapter.sol",
        "id": 326,
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 986,
        "src": "253:44:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/DexAdapters/GX_KyberAdapter.sol",
        "file": "../DexAdapters/GX_KyberAdapter.sol",
        "id": 327,
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 766,
        "src": "298:44:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 328,
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 4189,
        "src": "344:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 330,
              "name": "GX_DEXManagerBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 588,
              "src": "543:17:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GX_DEXManagerBase_$588",
                "typeString": "contract GX_DEXManagerBase"
              }
            },
            "id": 331,
            "nodeType": "InheritanceSpecifier",
            "src": "543:17:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 332,
              "name": "GX_UniswapAdapter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 981,
              "src": "562:17:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GX_UniswapAdapter_$981",
                "typeString": "contract GX_UniswapAdapter"
              }
            },
            "id": 333,
            "nodeType": "InheritanceSpecifier",
            "src": "562:17:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 334,
              "name": "GX_ZeroXAdapter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 985,
              "src": "581:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GX_ZeroXAdapter_$985",
                "typeString": "contract GX_ZeroXAdapter"
              }
            },
            "id": 335,
            "nodeType": "InheritanceSpecifier",
            "src": "581:15:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 336,
              "name": "GX_KyberAdapter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 765,
              "src": "598:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GX_KyberAdapter_$765",
                "typeString": "contract GX_KyberAdapter"
              }
            },
            "id": 337,
            "nodeType": "InheritanceSpecifier",
            "src": "598:15:5"
          }
        ],
        "contractDependencies": [
          141,
          318,
          588,
          593,
          765,
          981,
          985,
          1720,
          2564
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 329,
          "nodeType": "StructuredDocumentation",
          "src": "402:115:5",
          "text": "@author Solidity Services\n @title Galaxis: DEX manager\n @notice Services for the decentralized exchanges"
        },
        "fullyImplemented": true,
        "id": 512,
        "linearizedBaseContracts": [
          512,
          765,
          593,
          985,
          981,
          588,
          141,
          318,
          2564,
          1720
        ],
        "name": "GX_DEXManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "687:7:5",
              "statements": []
            },
            "documentation": {
              "id": 338,
              "nodeType": "StructuredDocumentation",
              "src": "621:40:5",
              "text": "STATE VARIABLES\n CONSTRUCTOR"
            },
            "id": 342,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "677:2:5"
            },
            "returnParameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "687:0:5"
            },
            "scope": 512,
            "src": "666:28:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              562
            ],
            "body": {
              "id": 435,
              "nodeType": "Block",
              "src": "1141:653:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 358,
                              "name": "dexs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "1160:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_DEXInfos_$50_storage_$",
                                "typeString": "mapping(uint8 => struct GX_DEXRegistry.DEXInfos storage ref)"
                              }
                            },
                            "id": 360,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 359,
                              "name": "_dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 345,
                              "src": "1165:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1160:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DEXInfos_$50_storage",
                              "typeString": "struct GX_DEXRegistry.DEXInfos storage ref"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dexAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49,
                          "src": "1160:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1193:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1185:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 362,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1185:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1185:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1160:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "47616c617869733a20446578206973206e6f7420736574",
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1197:25:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06470007d35261e3c97dad6c38b4e0a5cdf84fde3aa3f7d5dbf742b6ebd2760f",
                          "typeString": "literal_string \"Galaxis: Dex is not set\""
                        },
                        "value": "Galaxis: Dex is not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06470007d35261e3c97dad6c38b4e0a5cdf84fde3aa3f7d5dbf742b6ebd2760f",
                          "typeString": "literal_string \"Galaxis: Dex is not set\""
                        }
                      ],
                      "id": 357,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1152:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1152:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "1152:71:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_DEXType_$45",
                      "typeString": "enum GX_DEXRegistry.DEXType"
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 370,
                          "name": "dexs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "1237:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_DEXInfos_$50_storage_$",
                            "typeString": "mapping(uint8 => struct GX_DEXRegistry.DEXInfos storage ref)"
                          }
                        },
                        "id": 372,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 371,
                          "name": "_dex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 345,
                          "src": "1242:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1237:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DEXInfos_$50_storage",
                          "typeString": "struct GX_DEXRegistry.DEXInfos storage ref"
                        }
                      },
                      "id": 373,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "dexType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47,
                      "src": "1237:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DEXType_$45",
                        "typeString": "enum GX_DEXRegistry.DEXType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 374,
                        "name": "DEXType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1259:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DEXType_$45_$",
                          "typeString": "type(enum GX_DEXRegistry.DEXType)"
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Uniswap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1259:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DEXType_$45",
                        "typeString": "enum GX_DEXRegistry.DEXType"
                      }
                    },
                    "src": "1237:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_DEXType_$45",
                        "typeString": "enum GX_DEXRegistry.DEXType"
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 390,
                            "name": "dexs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "1395:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_DEXInfos_$50_storage_$",
                              "typeString": "mapping(uint8 => struct GX_DEXRegistry.DEXInfos storage ref)"
                            }
                          },
                          "id": 392,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 391,
                            "name": "_dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 345,
                            "src": "1400:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1395:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DEXInfos_$50_storage",
                            "typeString": "struct GX_DEXRegistry.DEXInfos storage ref"
                          }
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dexType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47,
                        "src": "1395:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DEXType_$45",
                          "typeString": "enum GX_DEXRegistry.DEXType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 394,
                          "name": "DEXType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "1417:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_DEXType_$45_$",
                            "typeString": "type(enum GX_DEXRegistry.DEXType)"
                          }
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Kyber",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1417:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DEXType_$45",
                          "typeString": "enum GX_DEXRegistry.DEXType"
                        }
                      },
                      "src": "1395:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DEXType_$45",
                          "typeString": "enum GX_DEXRegistry.DEXType"
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 409,
                              "name": "dexs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "1550:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_DEXInfos_$50_storage_$",
                                "typeString": "mapping(uint8 => struct GX_DEXRegistry.DEXInfos storage ref)"
                              }
                            },
                            "id": 411,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 410,
                              "name": "_dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 345,
                              "src": "1555:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1550:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DEXInfos_$50_storage",
                              "typeString": "struct GX_DEXRegistry.DEXInfos storage ref"
                            }
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dexType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47,
                          "src": "1550:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DEXType_$45",
                            "typeString": "enum GX_DEXRegistry.DEXType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 413,
                            "name": "DEXType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "1572:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DEXType_$45_$",
                              "typeString": "type(enum GX_DEXRegistry.DEXType)"
                            }
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ZeroX",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1572:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DEXType_$45",
                            "typeString": "enum GX_DEXRegistry.DEXType"
                          }
                        },
                        "src": "1550:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 421,
                        "nodeType": "Block",
                        "src": "1605:65:5",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "47616c617869733a20756e6b6f6e776e2065786368616e67652074797065",
                                  "id": 418,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1626:32:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_21865b3132424ed11b8442ca8d932f34fe2fab8bb4b2ae172c6e7ffe6a5df8a7",
                                    "typeString": "literal_string \"Galaxis: unkonwn exchange type\""
                                  },
                                  "value": "Galaxis: unkonwn exchange type"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_21865b3132424ed11b8442ca8d932f34fe2fab8bb4b2ae172c6e7ffe6a5df8a7",
                                    "typeString": "literal_string \"Galaxis: unkonwn exchange type\""
                                  }
                                ],
                                "id": 417,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "1619:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1619:40:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 420,
                            "nodeType": "ExpressionStatement",
                            "src": "1619:40:5"
                          }
                        ]
                      },
                      "id": 422,
                      "nodeType": "IfStatement",
                      "src": "1546:124:5",
                      "trueBody": {
                        "id": 416,
                        "nodeType": "Block",
                        "src": "1587:12:5",
                        "statements": []
                      }
                    },
                    "id": 423,
                    "nodeType": "IfStatement",
                    "src": "1391:279:5",
                    "trueBody": {
                      "id": 408,
                      "nodeType": "Block",
                      "src": "1432:100:5",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 398,
                                "name": "_tknOffer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 347,
                                "src": "1462:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 399,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 351,
                                "src": "1473:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 400,
                                "name": "_tknGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 349,
                                "src": "1482:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 401,
                                "name": "_rate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 353,
                                "src": "1491:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 402,
                                    "name": "dexs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54,
                                    "src": "1498:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_DEXInfos_$50_storage_$",
                                      "typeString": "mapping(uint8 => struct GX_DEXRegistry.DEXInfos storage ref)"
                                    }
                                  },
                                  "id": 404,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 403,
                                    "name": "_dex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 345,
                                    "src": "1503:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1498:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DEXInfos_$50_storage",
                                    "typeString": "struct GX_DEXRegistry.DEXInfos storage ref"
                                  }
                                },
                                "id": 405,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "dexAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 49,
                                "src": "1498:21:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 397,
                              "name": "makeOrderKyber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 676,
                              "src": "1447:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                                "typeString": "function (address,uint256,address,uint256,address)"
                              }
                            },
                            "id": 406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1447:73:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 407,
                          "nodeType": "ExpressionStatement",
                          "src": "1447:73:5"
                        }
                      ]
                    }
                  },
                  "id": 424,
                  "nodeType": "IfStatement",
                  "src": "1234:436:5",
                  "trueBody": {
                    "id": 389,
                    "nodeType": "Block",
                    "src": "1276:101:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 378,
                              "name": "_tknOffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 347,
                              "src": "1310:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 379,
                              "name": "_tknGet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 349,
                              "src": "1321:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 380,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 351,
                              "src": "1330:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 381,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1339:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1339:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 385,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1359:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GX_DEXManager_$512",
                                    "typeString": "contract GX_DEXManager"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GX_DEXManager_$512",
                                    "typeString": "contract GX_DEXManager"
                                  }
                                ],
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1351:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 383,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1351:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1351:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 377,
                            "name": "swapTokensUniswap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 980,
                            "src": "1292:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,uint256,address,address)"
                            }
                          },
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1292:73:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 388,
                        "nodeType": "ExpressionStatement",
                        "src": "1292:73:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 428,
                        "name": "_dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "1746:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 429,
                        "name": "_tknOffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "1752:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 430,
                        "name": "_tknGet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "1763:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 431,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "1772:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 432,
                        "name": "_rate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "1781:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 425,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1729:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_GX_DEXManager_$512",
                          "typeString": "contract super GX_DEXManager"
                        }
                      },
                      "id": 427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "placeOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 562,
                      "src": "1729:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint8,address,address,uint256,uint256)"
                      }
                    },
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:58:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 434,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:58:5"
                }
              ]
            },
            "documentation": {
              "id": 343,
              "nodeType": "StructuredDocumentation",
              "src": "700:318:5",
              "text": "MODIFIERS\n TRANSACTIONS\n @notice placing order to an exchange\n @dev ...\n @param _dex dex exchange or adapter number\n @param _tknOffer token to offer\n @param _tknGet token to get\n @param _amount amount to exchange\n @param _rate expected rate of the exchange"
            },
            "functionSelector": "775fec62",
            "id": 436,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeOrder",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 355,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1132:8:5"
            },
            "parameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "name": "_dex",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 436,
                  "src": "1043:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 347,
                  "name": "_tknOffer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 436,
                  "src": "1055:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 349,
                  "name": "_tknGet",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 436,
                  "src": "1074:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 351,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 436,
                  "src": "1091:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1091:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 353,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 436,
                  "src": "1105:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1042:74:5"
            },
            "returnParameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1141:0:5"
            },
            "scope": 512,
            "src": "1023:771:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              570
            ],
            "body": {
              "id": 443,
              "nodeType": "Block",
              "src": "1965:8:5",
              "statements": []
            },
            "documentation": {
              "id": 437,
              "nodeType": "StructuredDocumentation",
              "src": "1800:105:5",
              "text": "@notice placing order to an exchange\n @dev ...\n @param _orderId cancelling the order id"
            },
            "functionSelector": "514fcac7",
            "id": 444,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelOrder",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 441,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1956:8:5"
            },
            "parameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 439,
                  "name": "_orderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 444,
                  "src": "1931:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1931:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1930:18:5"
            },
            "returnParameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1965:0:5"
            },
            "scope": 512,
            "src": "1910:63:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              587
            ],
            "body": {
              "id": 510,
              "nodeType": "Block",
              "src": "2347:425:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 460,
                              "name": "dexs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "2366:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_DEXInfos_$50_storage_$",
                                "typeString": "mapping(uint8 => struct GX_DEXRegistry.DEXInfos storage ref)"
                              }
                            },
                            "id": 462,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 461,
                              "name": "_dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 447,
                              "src": "2371:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2366:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DEXInfos_$50_storage",
                              "typeString": "struct GX_DEXRegistry.DEXInfos storage ref"
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dexAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49,
                          "src": "2366:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2399:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2391:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 464,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2391:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2391:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2366:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "47616c617869733a20446578206973206e6f7420736574",
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2403:25:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06470007d35261e3c97dad6c38b4e0a5cdf84fde3aa3f7d5dbf742b6ebd2760f",
                          "typeString": "literal_string \"Galaxis: Dex is not set\""
                        },
                        "value": "Galaxis: Dex is not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06470007d35261e3c97dad6c38b4e0a5cdf84fde3aa3f7d5dbf742b6ebd2760f",
                          "typeString": "literal_string \"Galaxis: Dex is not set\""
                        }
                      ],
                      "id": 459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2358:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2358:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "2358:71:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_DEXType_$45",
                      "typeString": "enum GX_DEXRegistry.DEXType"
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 472,
                          "name": "dexs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "2443:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_DEXInfos_$50_storage_$",
                            "typeString": "mapping(uint8 => struct GX_DEXRegistry.DEXInfos storage ref)"
                          }
                        },
                        "id": 474,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 473,
                          "name": "_dex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 447,
                          "src": "2448:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2443:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DEXInfos_$50_storage",
                          "typeString": "struct GX_DEXRegistry.DEXInfos storage ref"
                        }
                      },
                      "id": 475,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "dexType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47,
                      "src": "2443:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DEXType_$45",
                        "typeString": "enum GX_DEXRegistry.DEXType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 476,
                        "name": "DEXType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2465:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DEXType_$45_$",
                          "typeString": "type(enum GX_DEXRegistry.DEXType)"
                        }
                      },
                      "id": 477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Uniswap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2465:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DEXType_$45",
                        "typeString": "enum GX_DEXRegistry.DEXType"
                      }
                    },
                    "src": "2443:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_DEXType_$45",
                        "typeString": "enum GX_DEXRegistry.DEXType"
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 482,
                            "name": "dexs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "2534:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_DEXInfos_$50_storage_$",
                              "typeString": "mapping(uint8 => struct GX_DEXRegistry.DEXInfos storage ref)"
                            }
                          },
                          "id": 484,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 483,
                            "name": "_dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 447,
                            "src": "2539:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2534:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DEXInfos_$50_storage",
                            "typeString": "struct GX_DEXRegistry.DEXInfos storage ref"
                          }
                        },
                        "id": 485,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dexType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47,
                        "src": "2534:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DEXType_$45",
                          "typeString": "enum GX_DEXRegistry.DEXType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 486,
                          "name": "DEXType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "2556:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_DEXType_$45_$",
                            "typeString": "type(enum GX_DEXRegistry.DEXType)"
                          }
                        },
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Kyber",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2556:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DEXType_$45",
                          "typeString": "enum GX_DEXRegistry.DEXType"
                        }
                      },
                      "src": "2534:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DEXType_$45",
                          "typeString": "enum GX_DEXRegistry.DEXType"
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 492,
                              "name": "dexs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "2623:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_DEXInfos_$50_storage_$",
                                "typeString": "mapping(uint8 => struct GX_DEXRegistry.DEXInfos storage ref)"
                              }
                            },
                            "id": 494,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 493,
                              "name": "_dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 447,
                              "src": "2628:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2623:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DEXInfos_$50_storage",
                              "typeString": "struct GX_DEXRegistry.DEXInfos storage ref"
                            }
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dexType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47,
                          "src": "2623:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DEXType_$45",
                            "typeString": "enum GX_DEXRegistry.DEXType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 496,
                            "name": "DEXType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "2645:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DEXType_$45_$",
                              "typeString": "type(enum GX_DEXRegistry.DEXType)"
                            }
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ZeroX",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2645:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DEXType_$45",
                            "typeString": "enum GX_DEXRegistry.DEXType"
                          }
                        },
                        "src": "2623:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 506,
                        "nodeType": "Block",
                        "src": "2700:65:5",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "47616c617869733a20756e6b6f6e776e2065786368616e67652074797065",
                                  "id": 503,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2721:32:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_21865b3132424ed11b8442ca8d932f34fe2fab8bb4b2ae172c6e7ffe6a5df8a7",
                                    "typeString": "literal_string \"Galaxis: unkonwn exchange type\""
                                  },
                                  "value": "Galaxis: unkonwn exchange type"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_21865b3132424ed11b8442ca8d932f34fe2fab8bb4b2ae172c6e7ffe6a5df8a7",
                                    "typeString": "literal_string \"Galaxis: unkonwn exchange type\""
                                  }
                                ],
                                "id": 502,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "2714:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2714:40:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 505,
                            "nodeType": "ExpressionStatement",
                            "src": "2714:40:5"
                          }
                        ]
                      },
                      "id": 507,
                      "nodeType": "IfStatement",
                      "src": "2619:146:5",
                      "trueBody": {
                        "id": 501,
                        "nodeType": "Block",
                        "src": "2660:34:5",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2682:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "functionReturnParameters": 458,
                            "id": 500,
                            "nodeType": "Return",
                            "src": "2675:8:5"
                          }
                        ]
                      }
                    },
                    "id": 508,
                    "nodeType": "IfStatement",
                    "src": "2530:235:5",
                    "trueBody": {
                      "id": 491,
                      "nodeType": "Block",
                      "src": "2571:34:5",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2593:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "functionReturnParameters": 458,
                          "id": 490,
                          "nodeType": "Return",
                          "src": "2586:8:5"
                        }
                      ]
                    }
                  },
                  "id": 509,
                  "nodeType": "IfStatement",
                  "src": "2440:325:5",
                  "trueBody": {
                    "id": 481,
                    "nodeType": "Block",
                    "src": "2482:34:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2504:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 458,
                        "id": 480,
                        "nodeType": "Return",
                        "src": "2497:8:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 445,
              "nodeType": "StructuredDocumentation",
              "src": "1983:236:5",
              "text": "@notice getting change rate for a given token change on an exchange\n @dev ...\n @param _dex dex number\n @param _tknOffer token to offer\n @param _tknGet token to get\n @param _amount amount to echange"
            },
            "functionSelector": "288916eb",
            "id": 511,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChangeRate",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 455,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2316:8:5"
            },
            "parameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "name": "_dex",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 511,
                  "src": "2247:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2247:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "name": "_tknOffer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 511,
                  "src": "2259:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2259:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 451,
                  "name": "_tknGet",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 511,
                  "src": "2278:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2278:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 453,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 511,
                  "src": "2295:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2295:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2246:62:5"
            },
            "returnParameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 457,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 511,
                  "src": "2342:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2342:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2341:6:5"
            },
            "scope": 512,
            "src": "2224:548:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 513,
        "src": "517:2259:5"
      }
    ],
    "src": "0:2777:5"
  },
  "legacyAST": {
    "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/DEXManager/GX_DEXManager.sol",
    "exportedSymbols": {
      "GX_DEXManager": [
        512
      ]
    },
    "id": 513,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 320,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/DEXManager/GX_DEXManagerBase.sol",
        "file": "./GX_DEXManagerBase.sol",
        "id": 321,
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 589,
        "src": "25:33:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/Composition/GX_TrustedParties.sol",
        "file": "../Composition/GX_TrustedParties.sol",
        "id": 322,
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 319,
        "src": "59:46:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/Composition/GX_DEXRegistry.sol",
        "file": "../Composition/GX_DEXRegistry.sol",
        "id": 323,
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 142,
        "src": "106:43:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/FundManager/GX_GeneralOrderInterface.sol",
        "file": "../FundManager/GX_GeneralOrderInterface.sol",
        "id": 324,
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 1721,
        "src": "151:53:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/DexAdapters/GX_UniswapAdapter.sol",
        "file": "../DexAdapters/GX_UniswapAdapter.sol",
        "id": 325,
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 982,
        "src": "206:46:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/DexAdapters/GX_ZeroXAdapter.sol",
        "file": "../DexAdapters/GX_ZeroXAdapter.sol",
        "id": 326,
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 986,
        "src": "253:44:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dsz/git/galaxistest/galaxis/contracts/DexAdapters/GX_KyberAdapter.sol",
        "file": "../DexAdapters/GX_KyberAdapter.sol",
        "id": 327,
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 766,
        "src": "298:44:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 328,
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 4189,
        "src": "344:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 330,
              "name": "GX_DEXManagerBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 588,
              "src": "543:17:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GX_DEXManagerBase_$588",
                "typeString": "contract GX_DEXManagerBase"
              }
            },
            "id": 331,
            "nodeType": "InheritanceSpecifier",
            "src": "543:17:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 332,
              "name": "GX_UniswapAdapter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 981,
              "src": "562:17:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GX_UniswapAdapter_$981",
                "typeString": "contract GX_UniswapAdapter"
              }
            },
            "id": 333,
            "nodeType": "InheritanceSpecifier",
            "src": "562:17:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 334,
              "name": "GX_ZeroXAdapter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 985,
              "src": "581:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GX_ZeroXAdapter_$985",
                "typeString": "contract GX_ZeroXAdapter"
              }
            },
            "id": 335,
            "nodeType": "InheritanceSpecifier",
            "src": "581:15:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 336,
              "name": "GX_KyberAdapter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 765,
              "src": "598:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GX_KyberAdapter_$765",
                "typeString": "contract GX_KyberAdapter"
              }
            },
            "id": 337,
            "nodeType": "InheritanceSpecifier",
            "src": "598:15:5"
          }
        ],
        "contractDependencies": [
          141,
          318,
          588,
          593,
          765,
          981,
          985,
          1720,
          2564
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 329,
          "nodeType": "StructuredDocumentation",
          "src": "402:115:5",
          "text": "@author Solidity Services\n @title Galaxis: DEX manager\n @notice Services for the decentralized exchanges"
        },
        "fullyImplemented": true,
        "id": 512,
        "linearizedBaseContracts": [
          512,
          765,
          593,
          985,
          981,
          588,
          141,
          318,
          2564,
          1720
        ],
        "name": "GX_DEXManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "687:7:5",
              "statements": []
            },
            "documentation": {
              "id": 338,
              "nodeType": "StructuredDocumentation",
              "src": "621:40:5",
              "text": "STATE VARIABLES\n CONSTRUCTOR"
            },
            "id": 342,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "677:2:5"
            },
            "returnParameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "687:0:5"
            },
            "scope": 512,
            "src": "666:28:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              562
            ],
            "body": {
              "id": 435,
              "nodeType": "Block",
              "src": "1141:653:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 358,
                              "name": "dexs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "1160:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_DEXInfos_$50_storage_$",
                                "typeString": "mapping(uint8 => struct GX_DEXRegistry.DEXInfos storage ref)"
                              }
                            },
                            "id": 360,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 359,
                              "name": "_dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 345,
                              "src": "1165:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1160:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DEXInfos_$50_storage",
                              "typeString": "struct GX_DEXRegistry.DEXInfos storage ref"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dexAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49,
                          "src": "1160:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1193:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1185:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 362,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1185:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1185:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1160:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "47616c617869733a20446578206973206e6f7420736574",
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1197:25:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06470007d35261e3c97dad6c38b4e0a5cdf84fde3aa3f7d5dbf742b6ebd2760f",
                          "typeString": "literal_string \"Galaxis: Dex is not set\""
                        },
                        "value": "Galaxis: Dex is not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06470007d35261e3c97dad6c38b4e0a5cdf84fde3aa3f7d5dbf742b6ebd2760f",
                          "typeString": "literal_string \"Galaxis: Dex is not set\""
                        }
                      ],
                      "id": 357,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1152:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1152:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "1152:71:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_DEXType_$45",
                      "typeString": "enum GX_DEXRegistry.DEXType"
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 370,
                          "name": "dexs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "1237:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_DEXInfos_$50_storage_$",
                            "typeString": "mapping(uint8 => struct GX_DEXRegistry.DEXInfos storage ref)"
                          }
                        },
                        "id": 372,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 371,
                          "name": "_dex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 345,
                          "src": "1242:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1237:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DEXInfos_$50_storage",
                          "typeString": "struct GX_DEXRegistry.DEXInfos storage ref"
                        }
                      },
                      "id": 373,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "dexType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47,
                      "src": "1237:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DEXType_$45",
                        "typeString": "enum GX_DEXRegistry.DEXType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 374,
                        "name": "DEXType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1259:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DEXType_$45_$",
                          "typeString": "type(enum GX_DEXRegistry.DEXType)"
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Uniswap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1259:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DEXType_$45",
                        "typeString": "enum GX_DEXRegistry.DEXType"
                      }
                    },
                    "src": "1237:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_DEXType_$45",
                        "typeString": "enum GX_DEXRegistry.DEXType"
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 390,
                            "name": "dexs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "1395:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_DEXInfos_$50_storage_$",
                              "typeString": "mapping(uint8 => struct GX_DEXRegistry.DEXInfos storage ref)"
                            }
                          },
                          "id": 392,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 391,
                            "name": "_dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 345,
                            "src": "1400:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1395:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DEXInfos_$50_storage",
                            "typeString": "struct GX_DEXRegistry.DEXInfos storage ref"
                          }
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dexType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47,
                        "src": "1395:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DEXType_$45",
                          "typeString": "enum GX_DEXRegistry.DEXType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 394,
                          "name": "DEXType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "1417:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_DEXType_$45_$",
                            "typeString": "type(enum GX_DEXRegistry.DEXType)"
                          }
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Kyber",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1417:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DEXType_$45",
                          "typeString": "enum GX_DEXRegistry.DEXType"
                        }
                      },
                      "src": "1395:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DEXType_$45",
                          "typeString": "enum GX_DEXRegistry.DEXType"
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 409,
                              "name": "dexs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "1550:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_DEXInfos_$50_storage_$",
                                "typeString": "mapping(uint8 => struct GX_DEXRegistry.DEXInfos storage ref)"
                              }
                            },
                            "id": 411,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 410,
                              "name": "_dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 345,
                              "src": "1555:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1550:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DEXInfos_$50_storage",
                              "typeString": "struct GX_DEXRegistry.DEXInfos storage ref"
                            }
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dexType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47,
                          "src": "1550:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DEXType_$45",
                            "typeString": "enum GX_DEXRegistry.DEXType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 413,
                            "name": "DEXType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "1572:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DEXType_$45_$",
                              "typeString": "type(enum GX_DEXRegistry.DEXType)"
                            }
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ZeroX",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1572:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DEXType_$45",
                            "typeString": "enum GX_DEXRegistry.DEXType"
                          }
                        },
                        "src": "1550:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 421,
                        "nodeType": "Block",
                        "src": "1605:65:5",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "47616c617869733a20756e6b6f6e776e2065786368616e67652074797065",
                                  "id": 418,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1626:32:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_21865b3132424ed11b8442ca8d932f34fe2fab8bb4b2ae172c6e7ffe6a5df8a7",
                                    "typeString": "literal_string \"Galaxis: unkonwn exchange type\""
                                  },
                                  "value": "Galaxis: unkonwn exchange type"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_21865b3132424ed11b8442ca8d932f34fe2fab8bb4b2ae172c6e7ffe6a5df8a7",
                                    "typeString": "literal_string \"Galaxis: unkonwn exchange type\""
                                  }
                                ],
                                "id": 417,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "1619:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1619:40:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 420,
                            "nodeType": "ExpressionStatement",
                            "src": "1619:40:5"
                          }
                        ]
                      },
                      "id": 422,
                      "nodeType": "IfStatement",
                      "src": "1546:124:5",
                      "trueBody": {
                        "id": 416,
                        "nodeType": "Block",
                        "src": "1587:12:5",
                        "statements": []
                      }
                    },
                    "id": 423,
                    "nodeType": "IfStatement",
                    "src": "1391:279:5",
                    "trueBody": {
                      "id": 408,
                      "nodeType": "Block",
                      "src": "1432:100:5",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 398,
                                "name": "_tknOffer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 347,
                                "src": "1462:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 399,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 351,
                                "src": "1473:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 400,
                                "name": "_tknGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 349,
                                "src": "1482:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 401,
                                "name": "_rate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 353,
                                "src": "1491:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 402,
                                    "name": "dexs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54,
                                    "src": "1498:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_DEXInfos_$50_storage_$",
                                      "typeString": "mapping(uint8 => struct GX_DEXRegistry.DEXInfos storage ref)"
                                    }
                                  },
                                  "id": 404,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 403,
                                    "name": "_dex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 345,
                                    "src": "1503:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1498:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DEXInfos_$50_storage",
                                    "typeString": "struct GX_DEXRegistry.DEXInfos storage ref"
                                  }
                                },
                                "id": 405,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "dexAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 49,
                                "src": "1498:21:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 397,
                              "name": "makeOrderKyber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 676,
                              "src": "1447:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                                "typeString": "function (address,uint256,address,uint256,address)"
                              }
                            },
                            "id": 406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1447:73:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 407,
                          "nodeType": "ExpressionStatement",
                          "src": "1447:73:5"
                        }
                      ]
                    }
                  },
                  "id": 424,
                  "nodeType": "IfStatement",
                  "src": "1234:436:5",
                  "trueBody": {
                    "id": 389,
                    "nodeType": "Block",
                    "src": "1276:101:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 378,
                              "name": "_tknOffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 347,
                              "src": "1310:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 379,
                              "name": "_tknGet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 349,
                              "src": "1321:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 380,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 351,
                              "src": "1330:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 381,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1339:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1339:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 385,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1359:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GX_DEXManager_$512",
                                    "typeString": "contract GX_DEXManager"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GX_DEXManager_$512",
                                    "typeString": "contract GX_DEXManager"
                                  }
                                ],
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1351:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 383,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1351:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1351:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 377,
                            "name": "swapTokensUniswap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 980,
                            "src": "1292:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,uint256,address,address)"
                            }
                          },
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1292:73:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 388,
                        "nodeType": "ExpressionStatement",
                        "src": "1292:73:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 428,
                        "name": "_dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "1746:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 429,
                        "name": "_tknOffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "1752:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 430,
                        "name": "_tknGet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "1763:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 431,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "1772:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 432,
                        "name": "_rate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "1781:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 425,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1729:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_GX_DEXManager_$512",
                          "typeString": "contract super GX_DEXManager"
                        }
                      },
                      "id": 427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "placeOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 562,
                      "src": "1729:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint8,address,address,uint256,uint256)"
                      }
                    },
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:58:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 434,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:58:5"
                }
              ]
            },
            "documentation": {
              "id": 343,
              "nodeType": "StructuredDocumentation",
              "src": "700:318:5",
              "text": "MODIFIERS\n TRANSACTIONS\n @notice placing order to an exchange\n @dev ...\n @param _dex dex exchange or adapter number\n @param _tknOffer token to offer\n @param _tknGet token to get\n @param _amount amount to exchange\n @param _rate expected rate of the exchange"
            },
            "functionSelector": "775fec62",
            "id": 436,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeOrder",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 355,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1132:8:5"
            },
            "parameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "name": "_dex",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 436,
                  "src": "1043:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 347,
                  "name": "_tknOffer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 436,
                  "src": "1055:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 349,
                  "name": "_tknGet",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 436,
                  "src": "1074:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 351,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 436,
                  "src": "1091:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1091:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 353,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 436,
                  "src": "1105:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1042:74:5"
            },
            "returnParameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1141:0:5"
            },
            "scope": 512,
            "src": "1023:771:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              570
            ],
            "body": {
              "id": 443,
              "nodeType": "Block",
              "src": "1965:8:5",
              "statements": []
            },
            "documentation": {
              "id": 437,
              "nodeType": "StructuredDocumentation",
              "src": "1800:105:5",
              "text": "@notice placing order to an exchange\n @dev ...\n @param _orderId cancelling the order id"
            },
            "functionSelector": "514fcac7",
            "id": 444,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelOrder",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 441,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1956:8:5"
            },
            "parameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 439,
                  "name": "_orderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 444,
                  "src": "1931:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1931:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1930:18:5"
            },
            "returnParameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1965:0:5"
            },
            "scope": 512,
            "src": "1910:63:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              587
            ],
            "body": {
              "id": 510,
              "nodeType": "Block",
              "src": "2347:425:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 460,
                              "name": "dexs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "2366:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_DEXInfos_$50_storage_$",
                                "typeString": "mapping(uint8 => struct GX_DEXRegistry.DEXInfos storage ref)"
                              }
                            },
                            "id": 462,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 461,
                              "name": "_dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 447,
                              "src": "2371:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2366:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DEXInfos_$50_storage",
                              "typeString": "struct GX_DEXRegistry.DEXInfos storage ref"
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dexAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49,
                          "src": "2366:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2399:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2391:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 464,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2391:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2391:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2366:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "47616c617869733a20446578206973206e6f7420736574",
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2403:25:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06470007d35261e3c97dad6c38b4e0a5cdf84fde3aa3f7d5dbf742b6ebd2760f",
                          "typeString": "literal_string \"Galaxis: Dex is not set\""
                        },
                        "value": "Galaxis: Dex is not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06470007d35261e3c97dad6c38b4e0a5cdf84fde3aa3f7d5dbf742b6ebd2760f",
                          "typeString": "literal_string \"Galaxis: Dex is not set\""
                        }
                      ],
                      "id": 459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2358:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2358:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "2358:71:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_DEXType_$45",
                      "typeString": "enum GX_DEXRegistry.DEXType"
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 472,
                          "name": "dexs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "2443:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_DEXInfos_$50_storage_$",
                            "typeString": "mapping(uint8 => struct GX_DEXRegistry.DEXInfos storage ref)"
                          }
                        },
                        "id": 474,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 473,
                          "name": "_dex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 447,
                          "src": "2448:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2443:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DEXInfos_$50_storage",
                          "typeString": "struct GX_DEXRegistry.DEXInfos storage ref"
                        }
                      },
                      "id": 475,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "dexType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47,
                      "src": "2443:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DEXType_$45",
                        "typeString": "enum GX_DEXRegistry.DEXType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 476,
                        "name": "DEXType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2465:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DEXType_$45_$",
                          "typeString": "type(enum GX_DEXRegistry.DEXType)"
                        }
                      },
                      "id": 477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Uniswap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2465:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DEXType_$45",
                        "typeString": "enum GX_DEXRegistry.DEXType"
                      }
                    },
                    "src": "2443:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_DEXType_$45",
                        "typeString": "enum GX_DEXRegistry.DEXType"
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 482,
                            "name": "dexs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "2534:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_DEXInfos_$50_storage_$",
                              "typeString": "mapping(uint8 => struct GX_DEXRegistry.DEXInfos storage ref)"
                            }
                          },
                          "id": 484,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 483,
                            "name": "_dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 447,
                            "src": "2539:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2534:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DEXInfos_$50_storage",
                            "typeString": "struct GX_DEXRegistry.DEXInfos storage ref"
                          }
                        },
                        "id": 485,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dexType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47,
                        "src": "2534:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DEXType_$45",
                          "typeString": "enum GX_DEXRegistry.DEXType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 486,
                          "name": "DEXType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "2556:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_DEXType_$45_$",
                            "typeString": "type(enum GX_DEXRegistry.DEXType)"
                          }
                        },
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Kyber",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2556:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DEXType_$45",
                          "typeString": "enum GX_DEXRegistry.DEXType"
                        }
                      },
                      "src": "2534:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DEXType_$45",
                          "typeString": "enum GX_DEXRegistry.DEXType"
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 492,
                              "name": "dexs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "2623:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_DEXInfos_$50_storage_$",
                                "typeString": "mapping(uint8 => struct GX_DEXRegistry.DEXInfos storage ref)"
                              }
                            },
                            "id": 494,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 493,
                              "name": "_dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 447,
                              "src": "2628:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2623:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DEXInfos_$50_storage",
                              "typeString": "struct GX_DEXRegistry.DEXInfos storage ref"
                            }
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dexType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47,
                          "src": "2623:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DEXType_$45",
                            "typeString": "enum GX_DEXRegistry.DEXType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 496,
                            "name": "DEXType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "2645:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DEXType_$45_$",
                              "typeString": "type(enum GX_DEXRegistry.DEXType)"
                            }
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ZeroX",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2645:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DEXType_$45",
                            "typeString": "enum GX_DEXRegistry.DEXType"
                          }
                        },
                        "src": "2623:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 506,
                        "nodeType": "Block",
                        "src": "2700:65:5",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "47616c617869733a20756e6b6f6e776e2065786368616e67652074797065",
                                  "id": 503,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2721:32:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_21865b3132424ed11b8442ca8d932f34fe2fab8bb4b2ae172c6e7ffe6a5df8a7",
                                    "typeString": "literal_string \"Galaxis: unkonwn exchange type\""
                                  },
                                  "value": "Galaxis: unkonwn exchange type"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_21865b3132424ed11b8442ca8d932f34fe2fab8bb4b2ae172c6e7ffe6a5df8a7",
                                    "typeString": "literal_string \"Galaxis: unkonwn exchange type\""
                                  }
                                ],
                                "id": 502,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "2714:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2714:40:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 505,
                            "nodeType": "ExpressionStatement",
                            "src": "2714:40:5"
                          }
                        ]
                      },
                      "id": 507,
                      "nodeType": "IfStatement",
                      "src": "2619:146:5",
                      "trueBody": {
                        "id": 501,
                        "nodeType": "Block",
                        "src": "2660:34:5",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2682:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "functionReturnParameters": 458,
                            "id": 500,
                            "nodeType": "Return",
                            "src": "2675:8:5"
                          }
                        ]
                      }
                    },
                    "id": 508,
                    "nodeType": "IfStatement",
                    "src": "2530:235:5",
                    "trueBody": {
                      "id": 491,
                      "nodeType": "Block",
                      "src": "2571:34:5",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2593:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "functionReturnParameters": 458,
                          "id": 490,
                          "nodeType": "Return",
                          "src": "2586:8:5"
                        }
                      ]
                    }
                  },
                  "id": 509,
                  "nodeType": "IfStatement",
                  "src": "2440:325:5",
                  "trueBody": {
                    "id": 481,
                    "nodeType": "Block",
                    "src": "2482:34:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2504:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 458,
                        "id": 480,
                        "nodeType": "Return",
                        "src": "2497:8:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 445,
              "nodeType": "StructuredDocumentation",
              "src": "1983:236:5",
              "text": "@notice getting change rate for a given token change on an exchange\n @dev ...\n @param _dex dex number\n @param _tknOffer token to offer\n @param _tknGet token to get\n @param _amount amount to echange"
            },
            "functionSelector": "288916eb",
            "id": 511,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChangeRate",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 455,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2316:8:5"
            },
            "parameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "name": "_dex",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 511,
                  "src": "2247:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2247:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "name": "_tknOffer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 511,
                  "src": "2259:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2259:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 451,
                  "name": "_tknGet",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 511,
                  "src": "2278:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2278:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 453,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 511,
                  "src": "2295:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2295:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2246:62:5"
            },
            "returnParameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 457,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 511,
                  "src": "2342:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2342:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2341:6:5"
            },
            "scope": 512,
            "src": "2224:548:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 513,
        "src": "517:2259:5"
      }
    ],
    "src": "0:2777:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.5+commit.f956cc89.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xd7f0afc2242fe9a5f45af6dea542902933e36c643299a53b1057b13cf8bcad80": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "adminAddress",
              "type": "address"
            }
          ],
          "name": "GX_AdminAdded",
          "type": "event"
        },
        "0x6a35edfb19dff31b968882a3f9eeef54e0ca71bb9af2db6e085f409715d3c547": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "adminAddress",
              "type": "address"
            }
          ],
          "name": "GX_AdminRemoved",
          "type": "event"
        },
        "0xb2adc6c11d1b970bf9414ad19866ff1fd17e3d64461e5e63265e6994264f7249": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint8",
              "name": "num",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "enum GX_DEXRegistry.DEXType",
              "name": "dexType",
              "type": "uint8"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "dexAddress",
              "type": "address"
            }
          ],
          "name": "GX_DEXAdded",
          "type": "event"
        },
        "0xabb8cac8af599331750e1284d535d9920cec7b858a03251e27f5208591a9870e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint8",
              "name": "num",
              "type": "uint8"
            }
          ],
          "name": "GX_DEXRemoved",
          "type": "event"
        },
        "0xa939b18300f53158576c00561d9810d163a1fd7971e0beb2deb3da9d6d6c5ae1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "partyAddress",
              "type": "address"
            }
          ],
          "name": "GX_PartyAdded",
          "type": "event"
        },
        "0xdbe139b9dcaabbb09bc4b530bfb2f8d390bd0ac7cd6e9c87a80468cc8ca709df": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "partyAddress",
              "type": "address"
            }
          ],
          "name": "GX_PartyRemoved",
          "type": "event"
        },
        "0xa86848877ec87d996e71aa1c410df4a53ed959b6d90c4d85dae5ecb95b47fca8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "_dex",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_tknOffer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_tknGet",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_rate",
              "type": "uint256"
            }
          ],
          "name": "OrderPlaced",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x3D692822062fcc6F6194575367CC79d533E218CB",
      "transactionHash": "0x2cd4c181c9d664c40e34d6e57a79c5c23cc06856feff027db19a5a84c5eeab95"
    }
  },
  "schemaVersion": "3.2.2-next.0",
  "updatedAt": "2020-08-13T15:10:47.020Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Solidity Services",
    "methods": {
      "addAdmin(address)": {
        "details": "...",
        "params": {
          "_newAdmin": "new admin of the contract"
        }
      },
      "addDEX(uint8,uint8,address)": {
        "details": "...",
        "params": {
          "_dexAddress": "address of the dex or dex adapter",
          "_dexType": "typer of the dex",
          "_num": "name and number of the exchange"
        }
      },
      "addParty(address)": {
        "details": "...",
        "params": {
          "_newParty": "new party of the contract"
        }
      },
      "cancelOrder(uint256)": {
        "details": "...",
        "params": {
          "_orderId": "cancelling the order id"
        }
      },
      "getChangeRate(uint8,address,address,uint256)": {
        "details": "...",
        "params": {
          "_amount": "amount to echange",
          "_dex": "dex number",
          "_tknGet": "token to get",
          "_tknOffer": "token to offer"
        }
      },
      "getDEXInfo(uint8)": {
        "details": "...",
        "params": {
          "_nrToCheck": "nr to check"
        }
      },
      "isAdmin(address)": {
        "details": "...",
        "params": {
          "_addressToCheck": "the address to be checked"
        }
      },
      "isParty(address)": {
        "details": "...",
        "params": {
          "_addressToCheck": "the address to be checked"
        }
      },
      "placeOrder(uint8,address,address,uint256,uint256)": {
        "details": "...",
        "params": {
          "_amount": "amount to exchange",
          "_dex": "dex exchange or adapter number",
          "_rate": "expected rate of the exchange",
          "_tknGet": "token to get",
          "_tknOffer": "token to offer"
        }
      },
      "removeAdmin(address)": {
        "details": "...",
        "params": {
          "_adminToDelete": "removing the admin from the contract"
        }
      },
      "removeDEX(uint8)": {
        "details": "...",
        "params": {
          "_num": "name and number of the exchange"
        }
      },
      "removeParty(address)": {
        "details": "...",
        "params": {
          "_partyToDelete": "removing the party from the contract"
        }
      }
    },
    "title": "Galaxis: DEX manager"
  },
  "userdoc": {
    "methods": {
      "addAdmin(address)": {
        "notice": "TRANSACTIONSadding a new admin to the contract"
      },
      "addDEX(uint8,uint8,address)": {
        "notice": "TRANSACTIONSadding exchange to the known exchanges"
      },
      "addParty(address)": {
        "notice": "TRANSACTIONSadding a new party"
      },
      "cancelOrder(uint256)": {
        "notice": "placing order to an exchange"
      },
      "constructor": "STATE VARIABLES CONSTRUCTOR",
      "getChangeRate(uint8,address,address,uint256)": {
        "notice": "getting change rate for a given token change on an exchange"
      },
      "getDEXInfo(uint8)": {
        "notice": "VIEWSchecking the address of the exchange"
      },
      "isAdmin(address)": {
        "notice": "VIEWSchecking if the address is admin"
      },
      "isParty(address)": {
        "notice": "VIEWSchecking if the address is a trusted party"
      },
      "placeOrder(uint8,address,address,uint256,uint256)": {
        "notice": "MODIFIERS TRANSACTIONSplacing order to an exchange"
      },
      "removeAdmin(address)": {
        "notice": "removing an admin from the contract"
      },
      "removeDEX(uint8)": {
        "notice": "removing exchange or exchange adapter from the known exchanges"
      },
      "removeParty(address)": {
        "notice": "removing a party from the contract"
      }
    },
    "notice": "Services for the decentralized exchanges"
  }
}